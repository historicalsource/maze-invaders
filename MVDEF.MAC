	.RADIX 16.
	.ASECT
	.ENABLE AMA
	.SBTTL	MVDEF-MAZE INVADERS DEFINITIONS
	.SBTTL	***********************************************
	.SBTTL	*
	.SBTTL	* PROGRAMMER: ED LOGG
	.SBTTL	*
	.SBTTL	***********************************************
;
;DATE INITIATED:	JULY 1,1981
;
;CHARGE NUMBER:	30003
;
;HARDWARE:	16 MOTION OBJECTS (16 HIGH BY 8 WIDE)
;		COLOR RASTER TV (MOUNTED VERTICALLY)
;		2 POKEY'S
;		EAROM
;
;MEMORY:	PROGRAM(20K)
;		VIDEO RAM(1K)
;		ZERO PAGE(1K)
;		VIDEO RAM ORIGIN IS LOWER LEFT CORNER
;		MOTION OBJECT ORIGIN IS LOWER RIGHT CORNER
;
;INTERRUPTS:	IRQ(4 PER FRAME)
;
;DESCRIPTION:	THE PLAYER DEFENDS HIMSELF IN A MAZE
;		USING FORWARD AND REVERSE, FIRE
;		AND A ROTATE CONTROL.  THE
;		PLAYER IS ATTACKED BY MANY KINDS OF
;		INVADERS.  THE PLAYER GATHERS ALL THE
;		FRUITS TO OPEN DOORS TO OTHER MAZES.
;
;LINK:		MAZEI,MVSUB,MVIRQ,MVTST
;
;		COPYRIGHT 1981 ATARI, INC.
;
;		UNAUTHORIZED REPRODUCTION, ADAPTATION
;		DISTRIBUTION, PERFORMANCE OR DISPLAY OF THIS
;		COMPUTER PROGRAM OR ASSOCIATED
;		AUDIOVISUAL WORK IS PROHIBITED.


	.SBTTL	GLOBALS

	.GLOBL	MESS,MESSAG,CHAR,IRQ,DIGITZ,DIGIT2
	.GLOBL	SIN,COS,ABS,COMP,SKIP
	.GLOBL	INITAL
	.GLOBL	CKSUM,WRITEA,JOYSTK,JOYST1
	.GLOBL	RESET,MAIN
	.GLOBL	CKSUM0,CKSUM1,CKSUM2,CKSUM3,CKSUM4
	.GLOBL	CPYRHT,ATTRC1,CLRFRT
	.GLOBL	BONUS,BONUS1,CHKDOR,CHKEND
	.GLOBL	CHKPTS,CHKST,INIT,COLBON
	.GLOBL	DEATH1,DISMSG,DLIVES,DOORS
	.GLOBL	FRUITS,GETINT,GOTFRT,MOVEH
	.GLOBL	SCORE,SCORES,SETCOL,SOUNDS
	.GLOBL	TURNS,TURNS6,UPDATE,UPSCRE,SELECT
	.GLOBL	OBSTAC,INITSC,INITA,INITP
	.GLOBL	INITM,INITS,INITB,INITD
	.GLOBL	HDTYPE,MAP,COLORS
	.GLOBL	SECUR0,SECUR1,MORSE,TRAP0,TRAP1


	.SBTTL	HARDWARE DEFINITIONS

POKEY0	=400			;POKEY #0
AUDC0	=POKEY0+1		;AUDIO CONTROL/VOLUME (4 CHANNELS-OFFSET BY 2)
AUDF0	=POKEY0			;AUDIO FREQUENCY (4 CHANNELS-OFFSET BY 2)
ACTL0	=POKEY0+8		;AUDIO CHANNEL CONTROL REGISTER
RND0	=POKEY0+0A		;RANDOM NUMBERS
OPTSW0	=POKEY0+8		;READ OPTION SWITCHES (1=ON)
				;12345678 SWITCH NUMBER
				;00	  10 GREEN DOORS FOR BONUS
				;10	  12 GREEN DOORS FOR BONUS
				;01	  14 GREEN DOORS FOR BONUS
				;11	  16 GREEN DOORS FOR BONUS
				;  00	  2 LIVES TO START
				;  10	  3 LIVES TO START
				;  01	  4 LIVES TO START
				;  11	  5 LIVES TO START
				;    00	  EVERY 20,000 FOR A BONUS LIFE
				;    10	  EVERY 25,000 FOR A BONUS LIFE
				;    01	  EVERY 30,000 FOR A BONUS LIFE
				;    11	  NO BONUS LIVES
				;      00 EASIEST
				;      10 EASY
				;      01 HARD
				;      11 HARDEST
POTGO0	=POKEY0+0B		;POT 60 FOR READING OPTION SWITCHES
SKCTL0	=POKEY0+0F		;INITIALIZATION REGISTER
POKEY1	=800			;POKEY #1
AUDC1	=POKEY1+1		;AUDIO CONTROL/VOLUME (4 CHANNELS-OFFSET BY 2)
AUDF1	=POKEY1			;AUDIO FREQUENCY (4 CHANNELS-OFFSET BY 2)
ACTL1	=POKEY1+8		;AUDIO CHANNEL CONTROL REGISTER
RND1	=POKEY1+0A		;RANDOM NUMBERS
OPTSW1	=POKEY1+8		;READ OPTION SWITCHES (1=ON)
				;12345678 SWITCH NUMBER
				;00	  FREE PLAY
				;10	  1 COIN 2 PLAYS
				;01	  1 COIN 1 PLAY
				;11	  2 COINS 1 PLAY
				;  00	  1=RIGHT COIN MECH MULTIPLIER
				;  10	  4=RIGHT COIN MECH MULTIPLIER
				;  01	  5=RIGHT COIN MECH MULTIPLIER
				;  11	  6=RIGHT COIN MECH MULTIPLIER
				;    0	  1=LEFT COIN MECH MULTIPLIER
				;    1	  2=LEFT COIN MECH MULTIPLIER
				;     000 NO BONUS ADDER
				;     100 2 COINS GIVES 1 ADDITIONAL
				;     010 4 COINS GIVES 1 ADDITIONAL
				;     110 4 COINS GIVES 2 ADDITIONAL
				;     001 5 COINS GIVES 1 ADDITIONAL
				;     101 3 COINS GIVES 1 ADDITIONAL
				;00    11 DEMO MODE
POTGO1	=POKEY1+0B		;POT GO FOR READING OPTION SWITCHES
SKCTL1	=POKEY1+0F		;INITIALIZATION REGISTER
PLYFLD	=1000			;PLAYFIELD RAM
MOP	=13C0			;MOTION OBJECT PICTURE
				;D0-D5=PICTURE NUMBER
				;D6=FLIP HORIZ. AND VERTICAL
				;D7=COLOR BANK SELECT FOR COLORS
MOV	=13D0			;MOTION OBJECT VERTICAL (0=LEFT EDGE)
MOH	=13E0			;MOTION OBJECT HORIZONTAL (0=BOTTOM)
MOC	=13F0			;MOTION OBJECT COLOR MAP
				;D0-D1=COLOR MAP FOR COLOR 1
				;D2-D3=COLOR MAP FOR COLOR 2
				;D4-D5=COLOR MAP FOR COLOR 3
				;D6-D7=COLOR BANK SELECTION
OPTSW2	=2000			;OPTION SWITCH BANK2 (D0-D6,0=0N) (SW1=D0,SW2=D1...)
				;12345678  SWITCHES
				;00       ENGLISH
				;10	  GERMAN
				;01       FRENCH
				;11	  SPANISH
				;      0  1 COIN MINIMUM
				;      1  2 COIN MINIMUM
				;       1 TWO COIN COUNTERS
				;       0 ONE COIN COUNTER
VBLANK	=2000			;VBLANK (D7=1=ON)
$COINA	=2010			;COIN SWITCHES (D7,D6,D5=RIGHT, CENTER, LEFT=0=ON)
$LAM	=2010			;SLAM SWITCH (D4=0=ON)
$LMBIT	=10			;SLAM BIT MASK
START1	=2010			;1 PLAYER START (D3=0=ON)
FIRE1	=2010			;PLAYER 1 FIRE (D2=0=ON)
BMOVE1	=2010			;PLAYER 1 BACKWARD MOTION (D0=0=ON)
SLFTST	=2011			;SELF TEST (D7=0=ON)
COCKSW	=2011			;COCKTAIL GAME (D5=1=UPRIGHT)
START2	=2011			;2 PLAYER START (D3=0=ON)
FIRE2	=2011			;PLAYER 2 FIRE (D2=0=ON)
BMOVE2	=2011			;PLAYER 2 BACKWARD MOTION (D0=0=ON)
POTR	=2020			;READ 8 BIT POT VALUE
EAREAD	=2030			;EAROM READ DATA LATCH
ANCOL	=2480			;ALPHA NUMERIC COLOR RAM (8 BYTES-2 BANKS)
				;+0	BACKGROUND
				;+1	ALPHANUMERICS
				;+2	SLOW (THICK SOUP) SPACE 
				;+3	CIRCLE AROUND COPYRIGHT, TURNSTILES
				;+4	BACKGROUND
				;+5	EDGE OF SCREEN
				;+6	BACKGROUND
				;+7
				;+8	BACKGROUND
				;+9	PLAYER EYELIDS, AND SELECT MODE MAZES
				;+A	PLAYERS BODY
				;+B	PLAYERS EYES
				;+C	BACKGROUND AND DOOR COLOR
				;+D	FRUIT COLOR AND EDGE OF SCREEN
				;+E	FRUIT COLOR AND DOOR COLOR
				;+F	FRUIT COLOR			
MOCOL	=2490			;MOTION OBJECT COLOR RAM (16 BYTES-4 BANKS)
				;+0	NOT USED
				;+1	SHOOTING INVADER
				;+2	SHOOTING INVADER
				;+3	SHOOTING INVADER
				;+4	NOT USED
				;+5	RING INVADER
				;+6	RING INVADER
				;+7	RING INVADER
				;+8	NOT USED
				;+9	PLAYERS FOOT, ROCK, BUZZ SAW COLOR
				;+A	ROCK
				;+B
				;+C	NOT USED
				;+D	PLAYERS EYELIDS AND NOSE
				;+E	PLAYERS BODY
				;+F	PLAYERS EYE
CCNTR	=2500			;COIN COUNTERS (LEFT, CENTER, RIGHT) (D7=0=ON)
STRTL1	=2503			;1 PLAYER START LED (D7=0=ON)
STRTL2	=2504			;2 PLAYER START LED (D7=0=0N)
VIDROT	=2506			;ROTATE ALPHA-NUMERIC STAMPS FOR COCKTAIL
POTW	=2580			;LOW 3 BITS OF ADDRESS FOR POT SELECT (2 WRITES REQUIRED)
				;3 US IS NEEDED BETWEEN WRITES TO POTW
				;A WAIT OF 150 MS IS NEEDED BEFORE POT CAN BE READ
IRQACK	=2600			;IRQ ACKNOWLEDGE
WTCHDG	=2680			;WATCHDOG
EACTRL	=2700			;EAROM CONTROL BITS
				;D0=CK PLUSE (1 THEN 0 FOR READ)
				;D1,D2=C1,C2 (0=READ, 2=WRITE, 6=ERASE)
				;D3=CHIP ENABLE (1=ON)
EAADDR	=2780			;64 BYTES FOR EAROM (ADDRESS/WRITE DATA LATCH)
PROG	=3000			;PROGRAM ADDRESS SPACE (20K)


	.SBTTL	PROGRAM CONSTANTS

NSCORE	=8			;NUMBERS OF HIGH SCORE ENTRIES
NHEADS	=16.			;NUMBER OF MOVING WALLS (HEADS & TAILS)
NALIEN	=10.			;NUMBER OF ALIENS AND ALIEN SHOTS
NBONUS  =8			;NUMBER OF SECRET BONUSES
NLEVEL	=32.			;NUMBER OF MAZE LEVELS (POWER OF 2 PLEASE)
NMULT	=8			;NUMBER OF MULTIPLEXED ALIENS


	.SBTTL	PLAYFIELD STAMPS

VER	=4F			;VERTICAL WALL
HOR	=47			;HORIZONTAL WALL
LLFT	=51			;LOWER LEFT CORNER
LRHT	=50			;LOWER RIGHT CORNER
ULFT	=54			;UPPER LEFT CORNER
URHT	=55			;UPPER RIGHT CORNER
ODOOR	=0DB			;DOOR TO OLD MAZES
NDOOR	=0DA			;DOOR TO NEW MAZES
MDOOR	=0DC			;MYSTERY DOOR
CNTR	=9D			;CENTER OF TURNSTILE
VTURN	=3F			;VERTICAL TURNSTILE
HTURN	=3E			;HORIZONTAL TURNSTILE
STR	=0EC			;START OF THE FRUIT PICTURE
BLK	=1B			;SLOW PLAYFIELD AND COLOR TEST
DOT	=1D			;DOT FOR MONITOR TEST
SCR	=30			;START OF THE SCORES FOR FRUITS
EDGE	=40			;START OF THE EDGE STAMPS


	.SBTTL	MACROS

	.MACRO LAL,ADD
	LDA I,0
	.=.-1
	.WORD ADD
	.=.-1
	.ENDM


	.MACRO LAH,ADD
	LDA I,0
	.=.-1
	.ENABL M68
	.WORD ADD
	.DSABL M68
	.=.-1
	.ENDM
	.SBTTL	ZERO PAGE DEFINITIONS

MOBJP:	.BLKB 16.		;MOTION OBJECT PICTURE
FOOTP	=MOBJP+10.		;PLAYERS FOOT PICTURE
PSHTP	=MOBJP+13.		;PLAYER SHOT PICTURE
PLAY1P	=MOBJP+11.		;PLAYER PICTURE
PLAY2P	=MOBJP+12.
MOBJV:	.BLKB 16.		;MOTION OBJECT VERTICAL
FOOTV	=MOBJV+10.		;PLAYERS FOOT VERTICAL
PSHTV	=MOBJV+13.		;PLAYER SHOT VERTICAL
PLAY1V	=MOBJV+11.		;PLAYER VERTICAL POSITION
PLAY2V	=MOBJV+12.
MOBJH:	.BLKB 16.		;MOTION OBJECT HORIZONTAL
FOOTH	=MOBJH+10.		;PLAYERS FOOT HORIZONTAL
PSHTH	=MOBJH+13.		;PLAYER SHOT HORIZONTAL
PLAY1H	=MOBJH+11.		;PLAYER HORIZONTAL POSITION
PLAY2H	=MOBJH+12.
MOBJC:	.BLKB 16.		;MOTION OBJECT COLORS
FOOTC	=MOBJC+10.		;PLAYERS FOOT COLOR
PSHTC	=MOBJC+13.		;PLAYER SHOT COLOR
PLAY1C	=MOBJC+11.		;PLAYER COLOR
PLAY2C	=MOBJC+12.
MOBJA:	.BLKB 15.		;ALIEN DIRECTION (D0-D2) 0=LEFT, 1=45 DEGREES, 2=UP,...
				;ALIEN SPEED (D3-D5)
				;STUN BIT(D6=1=TRUE)
				;ENTERING BIT (D7=1 IF ENTERING ALIEN)
PSHTA	=MOBJA+11.		;PLAYER SHOT ANGLE (SAME AS PLAYER VALUES)
PLAYA	=MOBJA+14.		;PLAYERS ANGLE (0=UP, 40=LEFT,...)
PSHTVL:	.BLKB 3			;PLAYER SHOT V LSB
PLAYVL:	.BLKB 1			;LSB OF PLAYERS VERTICAL POSITION
PSHTHL:	.BLKB 3			;PLAYER SHOT H LSB
PLAYHL:	.BLKB 1			;LSB OF PLAYERS HORIZONTAL POSITION
PSHTM:	.BLKB 3			;ZERO IF SHOT NOT MOVING
				;1=PREPARE TO START PLAY
MODE:	.BLKB 1			;GAME MODE (-1=ATTRACT,0=IN PLAY, 1=NUMBER OF MAZES LEFT FOR BONUS 
				;2=SELECT MAZE, 3=INITIALIZE)
PLAYR:	.BLKB 1			;PLAYER NUMBER (0 OR 1)
NPLAYR:	.BLKB 1			;NUMBER OF PLAYERS (0=1 PLAYER, 1=2 PLAYER)
SYNC:	.BLKB 1			;IRQ/MAIN LOOP INTERFACE
FRAME:	.BLKB 2			;FRAME COUNT
HSCORE:	.BLKB 3*NSCORE		;HIGH SCORES
INITL:	.BLKB 3*NSCORE		;HIGH SCORE INITIALS
TEMP1:	.BLKB 2			;TEMPORARIES
TEMP2:	.BLKB 2
TEMP3:	.BLKB 2
TEMP4:	.BLKB 2
TEMP5:	.BLKB 2
GTIME:	.BLKB 2			;GAME TIME (1=4 SECONDS)
OPTNS:	.BLKB 1			;OPTIONS FROM "OPTSW0"
OPTNS2:	.BLKB 1			;OPTIONS FROM OPTSW2 AND OPTSW3
UPDFLG:	.BLKB 2			;INDEX FOR ENTERING INITIALS
UPDINT:	.BLKB 1			;CURRENT INITIAL (0,1,2)
SCORE0:	.BLKB 2			;LSB OF SCORES
SCORE1:	.BLKB 2
SCORE2:	.BLKB 2			;MSB OF SCORES
TCMFLG:	.BLKB 1			;2 CREDIT MINIMUM FLAG (D7=1 FOR 2 CREDIT MIN)
ONE:	.BLKB 1			;CONSTANT 1 (SOFTWARE SECURITY)
JOYS:	.BLKB 4			;JOYSTICK VALUES CONVERTED-HORZONTAL (2 BYTES) & VERTICAL (2 BYTES)
				;HORIZ PLAYER 1, HORIZ. PLAYER2, VERTICAL PLAYER 1, VERTICAL PLAYER 2
OBST:	.BLKB 2			;PLAYFIELD ADDRESS FOR COLLISION CHECKING
COLIND:	.BLKB 1			;COLOR INDEX (1 TO CHANGE COLORS)
$CCTIM:	.BLKB 3			;COIN COUNTERS (D7=1=ON)
$$CRDT:	.BLKB 1			;CREDITS (0 TO 18.)
$CNCT:	.BLKB 1			;COIN ROUTINE DEFINITIONS
$BCCNT:	.BLKB 1
$BC:	.BLKB 1
$PSTSL:	.BLKB 3
$CNSTT:	.BLKB 3
$LMTIM:	.BLKB 1
$CMODE:	.BLKB 1			;COIN MODES (SEE "OPTSW1")
$INTCT:	.BLKB 1			;INTERRUPT COUNTER
COLCNT:	.BLKB 1			;PLAYFIELD COLOR BAR TEST (MINUS IF OFF)
LIVES:	.BLKB 2			;NUMBER OF REMAINING LIVES (0 TO 6)
ALIENS:	.BLKB 2			;NUMBER OF LIVE ALIENS (LEFT AND RIGHT SIDES)
CKIND:	.BLKB 1			;D6=1 FOR COCKTAIL, D7=1 FOR PLAYER 2 COCKTAIL
CKFF:	.BLKB 1			;FF IF COCKTAIL AND PLAYER 2 ELSE 0
ROMA:	.BLKB 1			;CURRENT EAROM ADDRESS (0 TO 63.)
ROMC:	.BLKB 1			;CURRENT EAROM CONTROL (0=COMPARE, 1=WRITE)
CHAN:	.BLKB 10		;8 CHANNELS OF AUDIO (2 POKEYS)
				;LOW PRIORITY SOUNDS (0=NO SOUND) (0-7)
				;HIGH PRIORITY SOUNDS (8-F)
PEXPLD:	.BLKB 1			;PLAYER EXPLOSION INDEX
DOOR:	.BLKB 1			;DOOR TIMER (0=NOT PRESENT)
				;7E=DOOR ALREADY OPEN
				;7F=DOOR JUST OPENED
				;80=IF PLAYER IS IN DOOR
				;FF=CLOSE DOORS
HILITE:	.BLKB 1			;HIGHLITE FOR LETTERS IN MESSAGES
STTMP0:	.BLKB 1			;SWITCH DEBOUNCE
INPUT	=.			;SELF TEST SWITCH INPUTS (12. BYTES)
STCOL	=INPUT+12.		;FLAGS FOR SELF TEST COLORS AND PICTURES
STTMP1	=STCOL+5		;SELF TEST TEMPORARY
STTMP2	=STTMP1+1		;SELF TEST TEMPORARY
STTMP3	=STTMP2+1		;SELF TEST TEMPORARY
;***********************************************************
;
;	THE FOLLOWING BYTES MUST NOT BE USED IN SELF TEST
;
;***********************************************************
SBONUS:	.BLKB NBONUS		;SECRET BONUS FLAGS
				;#0-NO SHOOTING (0=ACHIEVED)
				;#1-NO WASTED SHOTS (NUMBER OF HITS, NEGATIVE=MISSED)
				;#2-GETTING ALL FOUR CORNERS (F=ACHIEVED)
				;#3-GETTING ALL FRUITS FROM LEFT TO RIGHT (FF=FALIURE)
				;#4-GETTING ALL FRUITS FROM BOTTOM TO TOP (FF=FAILURE)
				;#5-GETTING ALL FRUITS FROM RIGHT TO LEFT (0=FAILURE)
				;#6-GETTING ALL FRUITS FROM TOP TO BOTTOM (0=FAILURE)
				;#7-ENTERING MYSTERY DOOR
FRUIT:	.BLKB 1			;NUMBER OF FRUITS LEFT
				;NEGATIVE MEANS INITIALIZE FRUIT
FRUITT:	.BLKB 1			;LAST FRUIT ENCOUNTERED
				;D0-D1=FRUIT TYPE
				;D2-D4=FRUIT COUNT (0 TO 4)
				;D7=1 MEANS NO FRUIT YET
FRUITP:	.BLKB 2			;POSITION OF LAST FRUIT SCORE
FRUITC:	.BLKB 1			;COUNTER FOR ERASING FRUIT SCORE
NCOPY	=.-SBONUS		;NUMBER OF BYTES TO SAVE FOR OTHER PLAYER
LEVEL:	.BLKB 2			;CURRENT MAZE LEVEL FOR EACH PLAYER (MINUS FOR FIRST TIME)
LLEVEL:	.BLKB 1			;LAST LEVEL (MINUS IF PLAYER DIED)
DELAY:	.BLKB 1			;DELAY BEFORE RESTARTING ATTRACT MODE
BONUST:	.BLKB 4			;BONUS TIMER (LSB PLAYER1, LSB PLAYER 2, MSB...)
BONUSL:	.BLKB 4			;NEXT BONUS LEVELS (LSB PLAYER1, LSB PLAYER 2, MSB...)
FEET:	.BLKB 1			;STATE OF THE PLAYERS FEET
TIMER:	.BLKB 1			;TIMER FOR SELECTING MAZE
CNTDWN:	.BLKB 1			;COUNT DOWN TIMER FREQUENCY
WALK:	.BLKB 1			;PLAYER WALKING NOTE
PLYRB:	.BLKB 1			;LAST READING OF BACKWARD BUTTON

	.=200
EAROM:	.BLKB 64.		;COPY OF EAROM CONTENTS
EAOPTS	=EAROM+18.		;SKIP OVER HIGH SCORES-OPTION SWITCHES
EAGAMS	=EAOPTS+1		;TOTAL NUMBER OF GAMES IN DECIMAL (4 BYTES)
EATIME	=EAGAMS+3		;TOTAL GAME TIME IN DECIMAL (3 BYTES) 1 COUNT EVERY 4 SECONDS
EACKSM	=EATIME+4		;CHECKSUM FOR DATA
ADELAY:	.BLKB NALIEN		;ALIEN DELAY BEFORE CHANGING DIRECTIONS
MOBJVL:	.BLKB NALIEN		;LSB OF ALIEN VERTICAL POSITION
MOBJHL:	.BLKB NALIEN		;LSB OF ALIEN HORIZONTAL POSITION
ROCKP:	.BLKB NALIEN		;INDEX FOR ALL PICTURES PICTURES
HEADH:	.BLKB NHEADS		;H POSITION
HEADV:	.BLKB NHEADS		;V POSITION
HEADS:	.BLKB NHEADS		;D0-D3=MASK FOR WHEN TO UPDATE
				;D4-D5=DIRECTION (0=LEFT, 1=UP, 2=RIGHT, 3=DOWN)
				;D6=HEAD (1) OR TAIL (0)
				;D7=CLOCKWISE (1) OR COUNTERCLOCKWISE (0)
PLYR1B:	.BLKB 81.		;SAVE PLAYER 1 FRUITS
MELON:	.BLKB 2			;MAZE WHERE WATERMELON IS LOCATED

	.=300
LEVELC:	.BLKB NLEVEL		;COUNT OF REPITITIONS IN EACH LEVEL (CURRENT PLAYER)
	.BLKB NLEVEL		;OTHER PLAYER (D7=1 IF PLAYER HAS BEEN IN THIS MAZE)
LEVELH:	.BLKB NLEVEL		;"LEVELC" FOR CONTINUATION GAME
HLEVEL:	.BLKB 1			;MINUS IF NO CONTINUATION OF LAST GAME
HMELON:	.BLKB 1			;MAZE NUMBER FOR WATERMELON FOR CONTINUING GAME
HSCOR:	.BLKB 3			;CONTINUATION GAME SCORE
HALLMZ:	.BLKB 1			;"ALLMZS" FOR CONTINUATION GAME
ALLMZS:	.BLKB 2			;NUMBER OF MAZES LEFT TO COMPLETE
OTHER:	.BLKB NCOPY		;NUMBER OF BYTES FOR OTHER PLAYERS PARAMETERS
LOW:	.BLKB 4			;LOW JOYSTICK POT VALUES
HIGH:	.BLKB 4			;HIGH JOYSTICK POT VALUES
LAST:	.BLKB 4			;LAST JOYSTICK READING
PLYR2B:	.BLKB 81.		;PLAYER 2 FRUITS
ATTRTD:	.BLKB 1			;DELAY FOR PLAYER IN ATTRACT
ATTRTE:	.BLKB 1			;DELAY BEFORE CHECKING THAT WE HIT A WALL
                                               