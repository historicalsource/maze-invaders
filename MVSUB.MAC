	.TITLE MVSUB - MAZE INVADERS SUBROUTINES
	.NLIST
	.INCLUDE MVDEF
	.LIST
	.PAGE
	.CSECT MVSUB
MVSUB:				;START OF THE CSECT (NEEDED FOR .REPT STMTS)


	.SBTTL	BONUS-DISPLAY "BONUS EVERY XXXX" MESSAGE
BONUS:	JSR BONUS1
	STA BONUSL
	ORA Y,BONUSV+1
	BEQ 30$			;NO BONUS AT ALL
	LDA Y,BONUSV+1
	STA BONUSL+2
	LDA I,6
	JSR MESS		;DISPLAY "EXTRA LIFE EVERY"
	SEC
	ROR HILITE		;SET DIFFERENT COLORS FOR THESE NUMBERS
	LDA BONUSL+2
	JSR DIGITZ		;DISPLAY DIGIT
	LDA BONUSL
	JSR DIGIT2		;DISPLAY 2 DIGITS
	LDA I,0
	JSR DIGIT2		;DISPLAY TWO ZEROS
	ASL HILITE		;BACK TO NORMAL COLORS
30$:	RTS

BONUS1:	LDA OPTNS
	AND I,30		;D4-D5=BONUS LEVEL OPTIONS
	LSR
	LSR
	LSR
	TAY
	LDA Y,BONUSV
BONUS2:	RTS

BONUSV:	.WORD 200,250,300,0	;*100 FOR BONUS LIFE


	.SBTTL	CHKDOR - CHECK DOOR TIMER
CHKDOR:	LDX MODE
	INX
	CPX I,3
	BCS BONUS2		;DO NOT DISPLAY MAZE NUMBER IN SELECT MODE
	LDA I,PLYFLD+40&0FF
	LDY I,PLYFLD+40/100
	BIT CKIND
	BPL 2$			;IF NOT COCKTAIL
	LDA I,PLYFLD+37F&0FF
	LDY I,PLYFLD+37F/100
2$:	STA TEMP4
	STY TEMP4+1
	LDY LEVEL
	SED
	LDA I,0
4$:	CLC			;CONVERT TO DECIMAL
	ADC I,01
	DEY
	BPL 4$			;ADD 1 EXTRA TO GET 1 TO N (NOT 0 TO N)
	CLD
	SEC
	JSR DIGIT2		;DISPLAY MAZE #
	LDA DELAY
	BNE 46$			;IF DISPLAYING MESSAGES
	LDA DOOR
	BEQ 40$
	JSR DOORS		;OPEN DOORS IF NECESSARY
	LDA DOOR
	BMI 50$			;IF PLAYER IS IN DOOR
40$:	LDA FRAME
	AND I,01
	BNE 48$			;SLOW DOWN TIMER COUNTDOWN
	LDA PEXPLD
	BNE 48$			;IF PLAYER DIED
	LDX PLAYR
	LDA I,99
	STA TEMP1
	LDY DOOR
	BEQ 42$			;IF NO DOOR YET
	LDA I,98		;DECREASE TIMER FASTER IF DOORS ARE OPEN
42$:	SED
	CLC
	ADC X,BONUST
	TAY
	LDA X,BONUST+2
	ADC TEMP1
	CLD
	BCS 45$			;NO UNDERFLOW PLEASE
	LDA I,0
	TAY			;LEAVE AT ZERO NOT 1
45$:	STA X,BONUST+2
	STY X,BONUST
	LDX DOOR
	BMI 46$			;NOT DURING COUNTDOWN
	CMP I,4
	BCS 47$			;IF ABOVE 400
	SEC
	ROR HILITE		;HIGHLIGHT TIMER SCORE
47$:	CMP I,04
	BNE 46$			;IF NOT NEAR 400
	CPY I,02
	BCS 46$			;NOT NEAR 400
	LDA I,24.
	STA CHAN+8		;TURN ON WARNING SOUND
46$:	LDA I,PLYFLD+300&0FF
	LDY I,PLYFLD+300/100
	BIT CKIND
	BPL 49$			;IF NOT COCKTAIL
	LDA I,PLYFLD+0BF&0FF
	LDY I,PLYFLD+0BF/100
49$:	STA TEMP4
	STY TEMP4+1		;POSITION FOR BONUS TIMER
	LDX PLAYR
	SEC			;ZERO SUPPRESSION
	LDA X,BONUST+2
	JSR DIGIT2		;DISPLAY 2 DIGITS
	LDA X,BONUST
	CLC
	JSR DIGIT2		;DISPLAY 2 DIGITS
	ASL HILITE		;CLEAR HIGHLIGHT
48$:	RTS

50$:	LDA CHAN+5		;SPECIAL BONUS SOUND
	BNE 48$			;DO NOT WRITE OVER "SPECIAL BONUS"
	LDA SBONUS
	BNE 85$			;IF SHOOTING OCCURED
	LDA FRAME		;FLASH MESSAGE
	AND I,10
	ASL
	ASL
	ASL
	ORA I,14.
	JSR MESS		;DISPLAY "TRIPLE BONUS"
85$:	LDA CHAN+15.
	BNE 48$			;WAIT UNTIL SOUND COMPLETES
	LDX PLAYR
	LDA X,BONUST
	AND I,0F
	BEQ 52$			;IF NO LOW ORDER JUNK
	LDY I,0
	LDX SBONUS
	BNE 51$			;IF NO TRIPLE SCORE
	SED
	STA TEMP1
	CLC
	ADC TEMP1
	ADC TEMP1
	CLD
51$:	JSR SCORE		;ADD TO SCORE
	LDX PLAYR
	LDA X,BONUST
	AND I,0F0
	STA X,BONUST		;CLEAR LOWER DIGIT
52$:	LDA X,BONUST
	ORA X,BONUST+2
	BEQ 60$			;END OF COUNTDOWN
	LDA FRAME
	AND I,1
	BNE 55$			;UPDATE SOUND AT THIS RATE
	LDA CHAN+12.
	BNE 54$			;WAIT UNTIL SOUND COMPLETES
	LDA I,2
	STA CHAN+12.		;RESTART SOUND
54$:	LDA CNTDWN
	SEC
	SBC I,2
	CMP I,10
	BCS 56$			;NO UNDERFLOW PLEASE
	LDA I,10
56$:	STA CNTDWN
	STA AUDF1		;NEW FREQUENCY
55$:	LDA I,10
	LDY SBONUS
	BNE 57$			;IF NOT TRIPLE BONUS
	LDA I,30
57$:	LDY I,0
	JSR SCORE		;ADD SCORE
	LDA I,99
	STA TEMP1		;MSB TO DECREMENT
	LDA I,90		;LSB TO DECREMENT
	LDX PLAYR
	JMP 42$

60$:	LDA CHAN+12.
	BNE 29$			;WAIT UNTIL SOUND STOPS
	LDA LEVEL		;GET CURRENT MAZE NUMBER
	ASL
	ASL
	TAY
	LDA PLAY1V
	CMP I,0E8
	BCS 20$			;IF LEFT SIDE DOOR
	INY
	CMP I,018
	BCC 20$			;IF RIGHT SIDE DOOR
	INY
	LDA PLAY1H
	CMP I,18
	BCS 20$			;IF UPPER DOOR
	INY			;MUST BE LOWER
20$:	LDA Y,MAP
	CMP I,7F
	BCC 25$			;IF NOT A MYSTERY DOOR
	LDA RND0
	AND I,NLEVEL-1		;RANDOM MAZE
25$:	STA LEVEL		;NEW MAZE NUMBER
	CMP I,0F
	BNE 70$			;IF NOT MAZE 16
SECUR1	=.
	LDX I,16.		;NUMBER OF BYTES -1 TO CHECKSUM
	LDA I,0E3		;DESIRED CHECKSUM
65$:	EOR X,ATTRC1
	DEX
	BPL 65$
	TAY
	BEQ 70$
	PLA
	EOR SCORE0		;CLOBBER LSB OF RETURN ADDRESS
	PHA
70$:	LDA I,-1
	STA FRUIT		;RESTART FRUIT AND SPECIAL BONUSES
	LDA MODE		;REMEMBER BONUS TIMER =0 AT THIS POINT
	BMI 28$			;IF IN ATTRACT
	LDA I,0FF
	STA DOOR		;LEAVE DOOR COLORS ON FOR CLOSING DOORS
	INC MODE		;MODE=1
	JMP MAZES		;RESET DISPLAY
 
28$:	JSR INIT		;INITIALIZE EVERYTHING
29$:	RTS


	.SBTTL	CHKEND - CHECK FOR END OF GAME
CHKEND:	LDA PLAY1C
	BNE 40$			;IF PLAYER IS ALIVE
	LDA MODE
	BMI 50$			;IF WE ARE IN ATTRACT 
	BNE 40$			;IF IN SELECT MODE
	JSR SAVE		;SAVE STATE OF THE FRUITS
	LDA LIVES
	ORA LIVES+1
	BEQ 50$			;GAME IS OVER
	LDA I,-1
	STA LLEVEL		;START PLAYER IN THE MIDDLE
	LDX PLAYR
	LDA NPLAYR
	BEQ 20$			;1 PLAYER GAME
	TXA
	EOR I,01
	TAX
	LDA X,LIVES
	BEQ 20$			;OTHER PLAYER IS DEAD
	STX PLAYR		;RESET PLAYER
	LDA CKIND
	BEQ 8$			;IF NOT IN A COCKTAIL CABINET
	BMI 8$			;IF PLAYER 2 COCKTAIL
	JSR CKSET		;SET TO PALYER 2 COCKTAIL
	JMP 12$

8$:	JSR CKCLR		;SET TO PLAYER 1
12$:	LDX I,NLEVEL-1
15$:	LDA X,LEVELC		;SWAP THE MAZE PARAMETERS
	LDY X,LEVELC+NLEVEL
	STA X,LEVELC+NLEVEL
	TYA
	STA X,LEVELC
	DEX
	BPL 15$
	LDX I,NCOPY-1
18$:	LDA X,SBONUS		;SWAP FRUIT AND SPECIAL BONUS FLAGS
	LDY X,OTHER
	STA X,OTHER
	TYA
	STA X,SBONUS
	DEX
	BPL 18$			;CONTINUE COPY
	LDA LEVEL
	LDY LEVEL+1
	STY LEVEL
	STA LEVEL+1		;SWAP LEVEL POINTERS
	BPL 20$			;IF NOT FIRST TIME THRU
	LDA I,3
	STA DELAY		;STOP EVERYTHING TILL MAZE IS SELECTED
	STA MODE		;PUT IN SELECT MAZE MODE
	RTS

20$:	INC MODE		;MODE=1
	LDX PLAYR
	DEC X,LIVES		;DECREASE A LIFE
	JSR MAZES		;DISPLAY NUMBER OF MAZES TO COMPLETE
40$:	RTS

50$:	LDX I,15.
	LDA I,0
	STA SKCTL0		;RESTART POKEY'S JUST IN CASE
	STA SKCTL1
55$:	STA X,MOBJC
	DEX
	BPL 55$			;REMOVE ALIENS AND SHOTS
	DEC DELAY		;DISPLAY MESSAGES (SET TO FF)
	LDA I,7
	STA SKCTL0		;RESTART POKEY'S
	STA SKCTL1
	BIT CKIND
	BPL 58$			;IF NOT COCKTAIL
	LDA UPDFLG+1
	BPL 58$			;PLAYER 2 WILL ENTER HIS INITIALS
	JSR CKCLR		;RETURN TO PLAYER 1 PERSPECTIVE
58$:	JSR INITSC		;INITIALIZE THE SCREEN
	LDA MODE
	BMI 60$			;WE ARE ALREADY IN ATTRACT
	DEC MODE		;INTO ATTRACT (-1)
	JSR UPDATE		;UPDATE HIGH SCORES IF NEEDED
	JSR CONTIN		;SETUP FOR CONTINUATION GAME
	LDA I,0
	STA STTMP0		;DEBOUNCE FOR "GETINT"
	LDA I,EACKSM-EAROM	;*** PUT "JSR WRITEA" BEFORE "JSR CHKEND"
	STA ROMA		;START EAROM WRITE
	RTS

60$:	LDA I,0
	LDX PLAYR
	STA X,BONUST
	STA X,BONUST+2		;SO "INITB" WILL RESET THE BONUS TIMER
	LDX I,2
65$:	LDA X,SELEC0
	CMP LEVEL
	BEQ 68$			;WE FOUND THE MAZE WE ARE IN
	DEX
	BPL 65$			;LOOK FOR MAZE IN THE TABLE
68$:	INX			;ELSE USE THE FIRST MAZE NUMBER
	LDA X,SELEC0
	STA LEVEL		;STEP THRU MAZES IN ATTRACT
	LDA I,-1
	STA LLEVEL		;START PLAYER IN THE MIDDLE
	STA FRUIT		;RESTART FRUIT AND SPECIAL BONUSES
	RTS


	.SBTTL	CHKPTS - CHECK PLAYER AGAINST CHECKPOINTS
CHKPTS:	LDA PLAY1V
	CMP I,1D
	BCC 20$			;CHECK RIGHT SIDE CORNERS
	CMP I,0E3
	BCC 10$			;NOT ON THE CORNERS
	LDA PLAY1H
	LDY I,01
	CMP I,1D
	BCC 40$			;LOWER LEFT CORNER
	INY
	CMP I,0D3
	BCS 40$			;UPPER LEFT CORNER
10$:	RTS

20$:	LDY I,08
	LDA PLAY1H
	CMP I,1D
	BCC 40$			;LOWER RIGHT CORNER
	CMP I,0D3
	BCC 10$			;NOT ON A CORNER
	LDY I,04		;UPPER RIGHT CORNER
40$:	TYA
	ORA SBONUS+2		;ADD BIT TO COLLECTION OF CHECKPOINTS
	STA SBONUS+2
	RTS


	.SBTTL	CHKST - CHECK FOR START OF GAME
CHKST:	LDA FRAME+1
	BNE 2$			;TIME OUT CONTINUATION GAME
	LDA MODE
	BPL 2$			;IF NOT IN ATTRACT
	LDA I,-1
	STA HLEVEL
2$:	LDA $CMODE
	AND I,03
	BNE 5$			;IF NOT FREE PLAY
	LDA I,2
	STA $$CRDT		;GIVE 2 CREDITS
5$:	LDA MODE
	BPL 19$			;IF IN GAME PLAY
	LDA OPTNS2
	AND I,40
	ASL
	STA TCMFLG		;SET FLAG
	LDX $$CRDT
	BEQ 18$			;IF NO CREDIT
	TAY
	BEQ 8$			;IF NO 2 CREDIT MINIMUM
	CPX I,02
	BCC 18$			;IF NOT ENOUGH CREDIT
	LDA I,0
	STA TCMFLG		;CLEAR FLAG
8$:	LDA OPTNS
	AND I,0C
	LSR
	LSR
	ADC I,02
	STA TEMP2+1		;2 TO 5 LIVES TO START
	LDA FRAME
	AND I,8
	ASL
	ASL
	ASL
	ASL
	STA STRTL1		;FLASH 1 PLAYER START
	CPX I,02
	BCC 20$			;IF ONLY 1 CREDIT
	STA STRTL2		;FLSH 2 PLAYER START
	LDX I,01
	LDA START2
	AND I,08
	BNE 20$			;NO 2 PLAYER START
	DEC $$CRDT
	LDA TEMP2+1
	STA LIVES+1		;SET NUMBER OF LIVES
	BPL 25$			;ALWAYS

18$:	LDA I,-1		;TURN OFF LED'S
	STA STRTL1
	STA STRTL2
19$:	RTS

20$:	LDX I,0
	LDA START1
	AND I,08
	BNE 90$			;IF NO 1 PLAYER START
25$:	DEC $$CRDT		;DECREASE CREDIT
	STX NPLAYR		;NUMBER OF PLAYERS STARTING (0 OR 1)
	LDA I,-1
	STA LLEVEL		;START PLAYER IN THE MIDDLE
	STA LEVEL+1		;FLAG FIRST TIME THRU FOR SECOND PLAYER
	STA STRTL1		;TURN OF START LED'S
	STA STRTL2
	LDA I,0
	STA X,STRTL1		;TURN ON THE CORRECT LED
	LDX TEMP2+1
	STX LIVES		;SET PLAYER 1 LIVES
	LDA I,03
	STA MODE		;2=SELECT MAZE MODE
	STA DELAY		;SET DELAY UNTIL PLAYER SELECTS STARTING MAZE
	JSR COPYHS		;COPY HIGH SCORES TO EAROM BUFFER
	LDA RND0
	AND I,07
	TAX
	LDA X,95$		;GET MAZE FOR WATERMELON
	STA MELON
	STA MELON+1
	JSR GDOORS		;NUMBER OF GREEN DOORS NEEDED
	STA ALLMZS		;NUMBER OF MAZES TO COMPLETE FOR BONUS
	STA ALLMZS+1
	LDA I,0
	STA BONUSL		;CLEAR BONUS LEVEL VALUES
	STA BONUSL+1		;NOTE THAT "SELECT" WILL INITIALIZE THESE
	STA BONUSL+2
	STA BONUSL+3
	STA PEXPLD		;CLEAR PLAYER DYING FLAG
	STA BONUST		;START TIMERS OUT AT MAX
	STA BONUST+1
	STA BONUST+2
	STA BONUST+3
	STA DOOR		;CLEAR IN CASE PLAYER WAS IN DOOR IN ATTRACT
	STA PLAYR		;SET PLAYER NUMBER
	STA $BC
	STA $BCCNT		;CLEAR BONUS ADDER FLAGS
	STA GTIME
	STA GTIME+1		;CLEAR GAME TIME
	LDX I,NLEVEL-1
26$:	STA X,LEVELC		;RESET LEVEL PARAMETERS
	STA X,LEVELC+NLEVEL	;CLEAR PLAYER 2'S PARAMETERS
	DEX
	BPL 26$
	LDX I,0F
28$:	STA X,CHAN		;TURN OFF ALL SOUNDS
	DEX
	BPL 28$
	LDX I,05
30$:	STA X,SCORE0
	DEX
	BPL 30$			;CLEAR SCORES
90$:	RTS

95$:	.BYTE 0,5,9,14.		;MAZES FOR WATERMELONS
	.BYTE 17.,22.,24.,30.


	.SBTTL	CKCLR - CLEAR COCKTAIL INDICATORS
CKCLR:	LDA I,0
	STA CKFF
	LDA COCKSW
	AND I,20		;D5=1 FOR UPRIGHT
	EOR I,20
	ASL
CKCLR1:	STA CKIND		;SET COCKTAIL INDICATOR
	STA VIDROT		;ROTATE VIDEO PICTURES
	RTS


	.SBTTL	CKSET - SET COCKTAIL INDICATORS
CKSET:	LDA I,0FF
	STA CKFF
	LDA I,0C0
	BMI CKCLR1		;ALWAYS


	.SBTTL	COLBON - COLLECT SPECIAL BONUS
COLBON:	LDA MODE		;THIS WOULD WRITE OVER COPYRIGHT MESSAGE
	BNE 1$			;IF IN ATTRACT OR SELECT MODE
	LDX CHAN+5
	BEQ 2$			;NO BONUS SOUND
	DEX
	BNE 1$			;IF SOUND IS NOT OVER YET
	BIT CKIND
	BPL 10$			;IF NOT COCKTAIL
	LDX I,1E
10$:	LDA I,0
	STA X,PLYFLD+100	;CLEAR MESSAGE AREA
	STA X,PLYFLD+101
	STA X,PLYFLD+200
	STA X,PLYFLD+201
	TXA
	CLC
	ADC I,20
	TAX
	CMP I,1F
	BCS 10$			;CONTINUE
1$:	RTS

2$:	LDY I,0
	LDX PLAYR
	LDA X,ALLMZS
	BNE 20$			;PLAYER SHOULD NOT RECEIVED THIS BONUS
	JSR GDOORS		;GET NUMBER OF GREEN DOORS
	STA X,ALLMZS		;RESET COUNTER
	LDX I,NLEVEL-1
	LDA I,0
4$:	LDA X,LEVELC
	AND I,7F
	STA X,LEVELC		;CLEAR RED DOOR FLAG
	DEX
	BPL 4$			;CLEAR FLAG FOR ALL MAZES
	BMI 90$			;ALWAYS

20$:	INY
	LDA SBONUS+1
	BMI 30$			;TOO MANY HITS=DEMO MODE
	CMP I,05
	BCC 30$			;NOT ENOUGH HITS W/O A MISS
	LDA I,0
	STA SBONUS+1		;RESET COUNTER
	BEQ 90$			;ALWAYS

30$:	INY
	LDA SBONUS+2
	BMI 40$			;ALREADY GOT THIS BONUS
	EOR I,0F
	BNE 40$			;NO BONUS HERE
	LDA I,80		;DO NOT ALLOW ANOTHER SPECIAL BONUS
	STA SBONUS+2
	BNE 90$			;ALWAYS

40$:	INY
	LDA $CMODE
	AND I,0C3
	CMP I,0C0
	BEQ 78$			;IF IN DEMO MODE
	LDA FRUIT
	BNE 78$			;IF FRUIT ARE STILL ON THE SCREEN
	LDA I,0FF
	CMP SBONUS+3
	BEQ 50$			;NO SECRET BONUS
	STA SBONUS+3
	BNE 90$			;ALWAYS

50$:	INY
	CMP SBONUS+4
	BEQ 60$			;NO SECRET BONUS
	STA SBONUS+4
	BNE 90$			;ALWAYS

60$:	INY
	LDA I,0
	CMP SBONUS+5
	BEQ 70$			;IF NO BONUS
	STA SBONUS+5
	BNE 90$			;ALWAYS

70$:	INY
	CMP SBONUS+6
	BEQ 80$			;IF NO BONUS
	STA SBONUS+6
	BNE 90$			;ALWAYS

78$:	LDY I,6
80$:	INY
	LDA SBONUS+7
	BEQ 95$			;NO BONUS YET
	BMI 95$			;ALREADY GIVEN
	LDA I,-1
	STA SBONUS+7
90$:	STY TEMP3
	LDA I,11.
	JSR MESS		;DISPLAY "SPECIAL BONUS"
	LDY I,PLYFLD+100/100	;SET SCREEN POSITION
	LDA I,PLYFLD+100&0FF
	BIT CKIND
	BPL 91$			;IF NOT COCKTAIL
	LDY I,PLYFLD+2BF/100
	LDA I,PLYFLD+2BF&0FF
91$:	STY TEMP4+1
	STA TEMP4
	LDA TEMP3
	ASL
	TAY
	STA TEMP3
	LDA Y,99$+1
	SEC
	JSR DIGIT2		;DISPLAY MSB'S
	LDY TEMP3
	LDA Y,99$		;SCORE FOR THIS BONUS
	JSR DIGIT2		;DISPLAY SCORE
	LDA I,0
	JSR DIGIT2		;LSB OF SCORE
	LDA I,18.
	STA CHAN+5		;START SOUND
	LDA I,16.
	JSR MESS		;DISPLAY "POINTS"
	LDX TEMP3
	LDA X,99$+1
	ASL
	TAY
	DEY
	STY TEMP3+1
	LDY AX,99$
	BNE 94$			;WE ARE ASSUMING POINTS GREATER THAN 10000
92$:	LDY I,50		;ARE MULTIPLES OF 10000
94$:	LDA I,0
	JSR SCORE		;ADD TO SCORE
	DEC TEMP3+1
	BPL 92$			;MORE THAN 10000 POINTS
95$:	RTS

99$:	.WORD 200,30,10		;*100 POINTS FOR SECRET BONUS.
	.WORD 20,25,20,15
	.WORD 50


	.SBTTL	CONTIN - SETUP PARAMETERS FOR CONTINUATION GAME

CONTIN:	LDX NPLAYR
	BEQ 10$			;IF ONLY A ONE PLAYER GAME
	LDA SCORE0
	CMP SCORE0+1
	LDA SCORE1
	SBC SCORE1+1
	LDA SCORE2
	SBC SCORE2+1
	BCC 10$			;PLAYER 2 HAS HIGHER SCORE
	DEX			;X=0
10$:	LDA LEVEL
	LDY I,NLEVEL-1
	CPX PLAYR
	BEQ 20$			;IF HIGH SCORE MATCHES LAST PLAYER UP
	LDY I,NLEVEL*2-1
	LDA LEVEL+1
20$:	STA HLEVEL		;MAZE NUMBER TO CONTINUE IN
	STX TEMP1
	LDX I,NLEVEL-1
30$:	LDA Y,LEVELC
	STA X,LEVELH
	DEY
	DEX
	BPL 30$			;CONTINUE COPYING LEVEL OF MAZES
	LDX TEMP1
	LDA X,MELON
	STA HMELON		;SAVE WATERMELON POSITION TOO.
	LDA X,ALLMZS
	STA HALLMZ		;SAVE NUMBER OF MAZES LEFT
	LDA X,SCORE2
	CMP I,10
	BCC 37$			;IF LESS THAN 100,000
	SED
	SBC I,05
	CLD
	STA HSCOR+2		;NEW SCORE =OLD SCORE - 50000
	LDA X,SCORE1
	STA HSCOR+1
	LDA X,SCORE0
	STA HSCOR
	RTS

37$:	LSR
	PHP			;SAVE CARRY FLAG
	TAY
	AND I,08
	BEQ 40$			;NO HALF CARRY
	TYA
	SEC
	SBC I,03		;CORRECT HALF CARRY AND CONVERT TO DECIMAL
	TAY
40$:	STY HSCOR+2
	PLP
	LDA X,SCORE1
	ROR
	PHP
	BPL 45$			;IF NO CARRY OVER
	SEC
	SBC I,30		;CONVERT TO DECIMAL
45$:	TAY
	AND I,08
	BEQ 50$			;NO HALF CARRY
	TYA
	SEC
	SBC I,03		;CONVERT TO DECIMAL
	TAY
50$:	STY HSCOR+1
	LDA X,SCORE0
	PLP
	ROR
	BPL 55$			;NO CARRY FROM PREVIOUS BYTE
	SEC
	SBC I,30		;CONVERT TO DECIMAL
55$:	TAY
	AND I,08
	BEQ 60$			;NO HALF CARRY
	TYA
	SEC
	SBC I,03
	TAY
60$:	STY HSCOR
	RTS

	.SBTTL	COPYHS - COPY HIGH SCORES TO EAROM BUFFER
COPYHS:	LDA I,-1
	STA UPDFLG		;STOP ENTERING INITIALS
	STA UPDFLG+1
	LDX I,8
10$:	LDA X,HSCORE		;COPY FIRST 3 ENTRIES TO  EAROM
	STA X,EAROM
	LDA X,INITL
	STA X,EAROM+9
	DEX
	BPL 10$
	JSR CKCLR		;CLEAR COCKTAIL IF PLAYER 2 IS ENTERING INITIALS
	JMP CKSUM		;CHECKSUM EAROM BUFFER


	.SBTTL	DISMSG - DISPLAY MESSAGES
DISMSG:	LDA DELAY
	BEQ 4$			;NOTHING TO DO
	LDX MODE
	BMI 2$			;IF DISPLAYING MESSAGES IN ATTRACT
	CPX I,1
	BNE 50$			;IF NOT IN MODE=1
2$:	LDA FRAME
	AND I,03
	BNE 50$			;DO NOT REDUCE DELAY COUNT EVERY FRAME
	DEC DELAY
	BNE 5$
	JMP 80$

4$:	LDA MODE
	BPL 50$			;NOT IN ATTRACT
	LDA $CMODE
	AND I,03
	BEQ 50$			;IF FREE PLAY
	LDA $CNCT
	ORA $$CRDT
	BEQ 50$			;IF NO CREDIT OR IN FREE PLAY
	LDA I,0
	JSR DEATH1		;STOP PLAYER TO ENTER DISPLAY MODE
50$:	RTS

5$:	DEX
	BNE 6$			;IF NOT DISPLAYING NUMBER OF MAZES LEFT
	JMP 60$

6$:	LDA DELAY
	CMP I,0FE
	BCC 11$			;REWRITE SCREEN ONLY ONCE
	JSR GDOORS		;NUMBER OF GREEN DOORS TO START
	STA ALLMZS		;RESET COUNT FOR MESSAGE DISPLAY
	STA ALLMZS+1
	LDA $CMODE
	AND I,03
	BEQ 10$			;NO FREE PLAY MESSAGE
	JSR MESS		;PUT UP GAME COST
10$:	JSR SCORES		;DISPLAY HIGH SCORES
	JSR BONUS		;DISPLAY BONUS LEVEL
	JSR MAZES1		;DISPLAY NUMBER OF MAZES NEEDED FOR BONUS
	JSR ATTRC1		;DISPLAY COPYRIGHT MESSAGE
11$:	LDA FRAME
	AND I,20
	ASL
	ASL
	STA TEMP2		;MASK FOR FLASHING MESSAGES
	SEC
	ROR HILITE		;SET
	LDA HLEVEL
	ASL			;SET CARRY IF CONTINUATION NOT ALLOWED
	PHP
	LDA I,4*2
	ROR			;CLEAR MESSAGE IF NOT ALLOWED
	ORA TEMP2		;FLASH MESSAGE IF VISIBLE
	JSR MESS		;DISPLAY "CONTINUE LAST GAME"
	LDA I,33.*2
	LDY $$CRDT
	BEQ 40$			;IF NO CREDIT
	LDA I,34.*2
40$:	PLP
	ROR			;CLEAR MESSAGE IF NOT ALLOWED
	ORA TEMP2		;FLASH MESSAGE
	JSR MESS		;DISPLAY "INSERT COIN TO" OR "PRESS START TO"
	ASL HILITE		;CLEAR HIGHLIGHTING
	LDA $$CRDT
	ORA $CNCT
	BEQ 20$			;NO COINS IN YET
	TAY
	LDA I,80+10.		;ERASE 2 CREDIT MINIMUM MESSAGE
	LDX TCMFLG
	BEQ 13$			;IF NOT TWO COIN MINIMUM
	CPY I,02
	BCC 12$			;IF NOT ENOUGH CREDIT
	BCS 13$			;ALWAYS

20$:	LDA TCMFLG
	EOR I,80+10.
	JMP MESS		;EITHER SET OR CLEAR MESSAGE

12$:	LDA I,10.
	ORA TEMP2		;FLASH MESSAGE
13$:	JSR MESS		;DISPLAY "2 CREDIT MINIMUM" MESSAGE
	LDA I,9
	JSR MESS		;"CREDITS" MESSAGE
	LDA $$CRDT		;0 TO 18. CREDITS
	CMP I,10.
	BCC 15$			;9 OR LESS CREDITS
	LDA I,0A1
	JSR CHAR		;DISPLAY A 1 HIGHLIGHTED
	LDA $$CRDT
	SEC
	SBC I,10.
15$:	ORA I,0A0		;1 TO 9 ARE DISPLAYED USING 21 TO 29 + HIGHLIGHT
	JSR CHAR		;DISPLAY CREDIT
	LDA $CNCT
	BEQ 16$			;IF NO HALF CREDIT
	LDA I,9C
16$:	JMP CHAR		;DISPLAY BLANK OR 1/2

60$:	LDA LLEVEL
	BMI 65$			;IF PLAYER DID NOT JUST ENTER THIS MAZE
	JSR DOORS		;CLOSE THE DOORS
65$:	LDA DOOR
	BMI WATERM		;IF PLAYER ENTERED A DOOR
	LDA DELAY
	LSR
	TAY
	CPY I,10
	BCC 70$			;IF BELOW MAX
	LDY I,0F
70$:	LDA Y,99$		;EYE OPENING PICTURE SEQUENCE
	STA PLAY1P
	LDA I,40
	STA PLAY2P		;UPPER HALF OF PICTURE
WATERM	=.
	LDA $CMODE
	AND I,0C3
	CMP I,0C0
	BEQ 68$			;IF IN DEMO MODE
	LDA I,3F		;USE MOTION OBJECT BECAUSE DOOR COLORS GIVE US NO CHOICE
	ORA CKFF
	STA MOBJP+15.
	LDX I,0B0
	LDA OPTNS2
	AND I,03
	BIT CKIND
	BPL 66$			;IF NOT COCKTAIL
	LDX I,48
	ORA I,04
66$:	TAY
	LDA Y,95$
	STA MOBJV+15.
	STX MOBJH+15.
	LDA I,38
	STA MOBJC+15.
	LDA I,26.
	JSR MESS		;DISPLAY "10000 POINTS"
	LDX PLAYR
	LDY X,MELON
	CPY LEVEL
	BNE 61$			;IF WE ARE IN MAZE WITH A WATERMELON
	LDA MODE
	CMP I,2
	BEQ 61$			;IF WE ARE SELECTING A CONTINUATION GAME
	TYA
	PHA
	LDA I,25.
	JSR MESS		;DISPLAY "NEXT"
	PLA
	CLC
	ADC I,05
	AND I,NLEVEL-1
	TAY			;TELL PLAYER WHERE NEXT WATERMELON MAZE IS
61$:	SED
	LDA I,0			;SO RANGE IS 1 TO N
62$:	CLC
	ADC I,01
	DEY			;CONVERT TO DECIMAL
	BPL 62$
	CLD
	PHA
	LDA I,24.
	JSR MESS		;DISPLAY "IN MAZE"
	PLA
	SEC
	JSR DIGIT2		;DISPLAY MAZE NUMBER
68$:	RTS

80$:	DEX
	BPL 85$			;IF IN GAME PLAY MODE
	LDA $CMODE
	AND I,03
	BEQ INIT		;IF IN FREE PLAY
	LDA $CNCT
	ORA $$CRDT
	BEQ INIT		;START ATTRACT GAME PLAY
	DEC DELAY		;RESET DELAY
	RTS

85$:	DEC MODE		;MODE=0 FOR PLAY MODE
INIT	=.
	JSR INITP		;INITIALIZE PLAYER BEFORE THE SCREEN (SEE "DOOR")
	JSR INITSC		;INITIALIZE THE SCREEN
	JSR RESTOR		;RESTORE FRUITS
	JSR INITA		;INITIALIZE ALIENS
	JSR INITM		;INIT MAZE
	JSR INITB		;INITIALIZE BONUS TIMER
	JMP DLIVES		;DISPLAY THE EXTRA LIVES

95$:	.BYTE 0A0,0A8,0A8,0A0	;VERTICAL WATERMELON POSITION
	.BYTE 60,58,58,60
99$:	.BYTE 50,50,50,55,50,55,56,50
	.BYTE 55,56,57,55,56,57,56,57


	.SBTTL	DLIVES-DISPLAY LIVES AND FRUITS
;
; USES	A,X,Y,TEMP1,(TEMP4-TEMP4+1)
;
DLIVES:	LDX I,0
	JSR DLIVE1		;PUT UP PICTURES
	LDX I,1
DLIVE1:	CPX PLAYR
	BNE 10$			;IF PLAYER UP IS WRONG PLAYER
	LDA DOOR
	BNE 10$			;NOT WHEN DOORS ARE SHOWN
	LDY LEVEL
	LDA Y,LEVELC
	AND I,7F
	BEQ 10$			;NO MORE FRUITS TO DISPLAY
	STA TEMP1
	TXA
	TAY
	BIT CKIND
	BPL 5$			;IF NOT COCKTAIL
	INY
	INY
5$:	LDA Y,95$
	STA TEMP4		;GET PLAYFIELD ADDRESS
	LDA Y,96$
	STA TEMP4+1
	LDY I,0
	LDA I,STR
	STA NY,TEMP4		;ADD A FRUIT FOR EACH COMPLETION OF THIS MAZE
	DEC TEMP1
	BEQ 10$			;NO MORE FRUITS
	INY
	LDA I,STR+1
	STA NY,TEMP4
	DEC TEMP1
	BEQ 10$			;NO MORE FRUITS
	LDY I,20
	LDA I,STR+2
	STA NY,TEMP4
	DEC TEMP1
	BEQ 10$			;NO MORE FRUITS
	INY
	LDA I,STR+3
	STA NY,TEMP4
	DEC TEMP1
	BEQ 10$			;NO MORE FRUITS
	LDY I,40
	LDA I,STR
	STA NY,TEMP4
	DEC TEMP1
	BEQ 10$			;NO MORE FRUITS
	INY
	LDA I,STR+1
	STA NY,TEMP4
10$:	TXA
	TAY
	BIT CKIND
	BPL 15$			;IF NOT COCKTAIL
	INY
	INY
15$:	LDA Y,90$		;GET PLAYFIELD ADDRESS
	STA TEMP4
	LDA Y,91$
	STA TEMP4+1
	LDA I,6
	STA TEMP1
	SEC
	SBC X,LIVES
	TAX			;NUMBER OF BLANKS TO DISPLAY
20$:	LDA I,0
	DEX
	BPL 25$			;PUT OUT BLANK
	LDA I,9F
25$:	JSR CHAR		;DISPLAY SHIP OR BLANK
	DEC TEMP1
	BNE 20$
	RTS

CLRFRT	=.
	LDY PLAYR		;CLEAR FRUITS BECAUSE DOOR COLOR
	BIT CKIND
	BPL 50$			;IF NOT COCKTAIL
	INY
	INY
50$:	LDA Y,95$		;WILL MAKE FRUITS LOOK TERRIBLE
	STA TEMP4
	LDA Y,96$
	STA TEMP4+1		;PLAYFIELD ADDRESS
	LDY I,0
	TYA
	STA NY,TEMP4
	INY
	STA NY,TEMP4
	LDY I,20
	STA NY,TEMP4
	INY
	STA NY,TEMP4
	LDY I,40
	STA NY,TEMP4
	INY
	STA NY,TEMP4
	RTS

90$:	.BYTE PLYFLD+3F&0FF	;POSITIONS FOR LIVES
	.BYTE PLYFLD+2BF&0FF
	.BYTE PLYFLD+380&0FF	;NOT USED
	.BYTE PLYFLD+100&0FF
91$:	.BYTE PLYFLD+3F/100
	.BYTE PLYFLD+2BF/100
	.BYTE PLYFLD+380/100	;NOT USED
	.BYTE PLYFLD+100/100
95$:	.BYTE PLYFLD+0FE&0FF	;POSITIONS FOR FRUITS
	.BYTE PLYFLD+37E&0FF
	.BYTE PLYFLD+2C0&0FF	;NOT USED
	.BYTE PLYFLD+0&0FF
96$:	.BYTE PLYFLD+0FE/100
	.BYTE PLYFLD+37E/100
	.BYTE PLYFLD+2C0/100	;NOT USED
	.BYTE PLYFLD+0/100


	.SBTTL	DOORS-ADD DOORS TO NEXT MAZE
;
;ENTRY	(PLAYR)=CURRENT PLAYER INDEX
;	(LEVEL)=CURRENT MAZE NUMBER
;USES	A,X,Y (TEMP3,TEMP3+1), (TEMP4,TEMP4+1)
DOORS:	LDA LEVEL		;GET MAZE NUMBER
	ASL
	ASL
	TAY			;INDEX INTO MAZE TABLE
	LDA FRAME
	AND I,03
	BEQ 10$			;OPEN DOORS SLOWLY
	RTS

10$:	LDA Y,MAP
	BMI 50$			;NO DOOR HERE TRY AGAIN
	STY TEMP3+1		;SAVE Y
	TAY
	CMP I,7F
	BCC 15$			;IF NOT A MYSTERY DOOR
	TYA
	LSR
	LSR			;USE OUR NUMBER TO DETERMINE WHERE TO PUT DOOR
15$:	AND I,07		;LET Y=MAZE NUMBERS
	STA TEMP4
	ASL			;CLEARS CARRY
	ADC TEMP4		;3*(X^7)
	ADC I,3			;MUST ALWAYS BE IN THE RANGE 3 TO 1C
	PHA
	LDA I,0
	STA TEMP4+1
	CPY I,7F
	BNE 16$			;IF NOT A MYSTERY DOOR
	LDA I,40
	BNE 18$			;ALWAYS

16$:	LDA Y,LEVELC
18$:	STA TEMP3		;DETERMINE IF WE HAVE VISITED THIS MAZE BEFORE
	LDA TEMP3+1
	AND I,03		;GET DIRECTION
	ASL
	TAX
	PLA
	CPX I,04
	BCC 20$			;WE ARE ON LEFT OR RIGHT SIDE
	ASL
	ASL
	ASL
	ASL
	ROL TEMP4+1
	ASL
	ROL TEMP4+1		;20*(X+8)
20$:	ADC X,90$		;ADD OFFSET
	STA TEMP4
	LDA TEMP4+1
	ADC X,90$+1
	ORA I,PLYFLD/100
	STA TEMP4+1		;WE NOW HAVE ADDRESS OF THE DOOR
	LDA I,0
	CPX I,04
	ROL			;CARRY SET IF UPPER/LOWER EDGE
	ASL
	TAX
	LDA TEMP3
	BPL 25$			;IF NEW MAZE
	INX
25$:	BIT CKIND
	BPL 30$			;IF NOT COCKTAIL
	TXA
	CLC
	ADC I,04		;RESET INDEX FOR COCTAIL MODE
	TAX
30$:	LDY MODE
	DEY
	BEQ 70$			;IF CLOSING DOORS
	LDY X,91$		;STARTING INDEX
	JSR DOORS1		;CHANGE DOOR STAMP
	BCC 48$			;NEXT DOOR
	LDY X,92$		;NEXT INDEX
	JSR DOORS1		;CHANGE DOOR
	BCC 48$			;NEXT DOOR
	LDY X,93$
45$:	JSR DOORS1		;CHANGE DOOR PICTURE
48$:	LDY TEMP3+1		;RESTORE INDEX
50$:	INY
	TYA
	AND I,03
	BEQ 60$			;TRY NEXT EDGE
	JMP 10$

60$:	RTS

70$:	LDY X,93$
	JSR DOORS2		;CHANGE DOOR STAMP
	BCC 48$			;WE JUST ALTERED THIS STAMP
	LDY X,92$
	JSR DOORS2		;CHANGE DOOR STAMP
	BCC 48$			;WE ALTERED THIS STAMP
	LDY X,91$
	JSR DOORS2		;CHANGE DOOR STAMP
	JMP 48$

90$:	.WORD 0,3A0,1D,2	;OFFSETS FOR THE EDGE OF THE SCREEN
91$:	.BYTE 2,0,0,40		;OFFSET FOR NEW LEFT/RIGHT, NEW UPPER/LOWER OLD LEFT/RIGHT, OLD UPPER/LOWER
	.BYTE 0,2,40,0		;OFFSETS FOR COCKTAIL MODE
92$:	.BYTE 1,1,20,20
	.BYTE 1,1,20,20
93$:	.BYTE 0,2,40,0
	.BYTE 2,0,0,40


;
; ENTRY	(Y)=INDEX INTO PLAYFIELD
;	(TEMP4,TEMP4+1)=PLAYFIELD ADDRESS
;	(TEMP3)=D7=0 IF NEW DOOR AND D6=1 IF MYSTERY DOOR
; EXIT	(CC)=CARRY SET IF NO CHANGE
; USES	A
DOORS1:	LDA NY,TEMP4		;GET CURRENT STAMP
	BPL 30$			;FIRST TIME THRU
	CMP I,NDOOR		;OPEN DOOR STAMP
	BCS 5$			;NO CHANGE NEEDED
	PHA
	AND I,03
	BEQ 10$			;DOOR WILL NOW BE COMPLETELY OPEN
	PLA
	SEC
	SBC I,01
	STA NY,TEMP4		;OPEN DOOR ONE MORE PICTURE
	CLC
5$:	RTS

10$:	BIT TEMP3
	BVC 15$			;IF NOT A MYSTERY DOOR
	PLA
	LDA I,MDOOR
	BNE 25$			;ALWAYS

15$:	PLA
	AND I,04
	BEQ 20$			;IF DOOR IS OLD DOOR
	LDA I,NDOOR
	BNE 25$			;ALWAYS

20$:	LDA I,ODOOR
25$:	STA NY,TEMP4		;NEW PLAYFIELD STAMP
	CLC
	RTS

30$:	ORA I,80		;USE UPPER BANK
	BIT TEMP3
	BPL 35$			;IF NEW DOOR
	AND I,0FB		;CONVERT STAMP TO OLD DOOR
35$:	STA NY,TEMP4
	SEC
	RTS


;
;ENTRY	(Y)=INDEX INTO PLAYFIELD
;	(TEMP4,TEMP4+1)=PLAYFIELD BASE ADDRESS
;	(TEMP3)=D7=0 IF NEW DOOR, D6=1 IF MYSTERY DOOR
;EXIT	(CC)=CARRY SET IF NO CHANGE MADE
;USES	A
DOORS2:	LDA NY,TEMP4
	BPL 50$			;FIRST TIME THRU
	CMP I,NDOOR
	BCS 20$			;IF DOOR IS OPEN
	PHA
	AND I,03
	CMP I,03
	BCS 10$			;NO CHANGE NEEDED
	PLA
	CLC
	ADC I,01
	STA NY,TEMP4		;NEW STAMP
	CLC			;FLAG A CHANGE
	RTS

10$:	PLA			;RETURN STACK TO PROPER LEVEL
	RTS			;HAVE CARRY SET

20$:	LDA TEMP4
	AND I,1F
	CMP I,02
	BEQ 30$			;IF A HORIZONTAL DOOR
	CMP I,1D
	BEQ 30$			;IF A HORIZONTAL DOOR
	LDA I,VER&0FC+80
	BNE 35$			;ALWAYS

30$:	LDA I,HOR&0FC+80
35$:	BIT TEMP3
	BPL 40$			;IF NEW DOOR
	AND I,0FB		;CONVERT TO OLD DOOR
40$:	STA NY,TEMP4		;OPEN DOOR
	CLC
	RTS

50$:	LDA I,NDOOR
	BIT TEMP3
	BVS 54$			;IF MYSTERY DOOR
	BPL 55$			;IF NEW DOOR
	LDA I,ODOOR
	BNE 55$			;ALWAYS

54$:	LDA I,MDOOR
55$:	STA NY,TEMP4
	SEC
	RTS


	.REPT 8-<.-MVSUB>&07	;ALLIGN ON 8 BYTE BOUNDARY
	.BYTE 0
	.ENDR
	.INCLUD MVCPY		;COPYRIGHT PROTECTION
	.INCLUD MVCPY		;ALLOW ROOM FOR FUTURE MODIFICATIONS
	.INCLUD MVCPY

CKSUM2: .BYTE 0A2		;CHECKSUM THIRD 4K BLOCK

	.SBTTL	FRUITS-PROCESS FRUIT SCORES
;
;ENTRY (FRUITC)=COUNTER FOR CLEARING SCORE
;	       =0 FOR NOTHING TO DO
;      (FRUITP)=ADDRESS OF FRUIT
;EXIT  (FRUITC)=UPDATED
;USES  A,Y

FRUITS:	LDA FRUITC
	BEQ 90$			;NOTHING TO DO
	DEC FRUITC
	BNE 90$			;DON'T ERASE SCORE YET
FRUITD	=.
	LDY I,0
	TYA
	STA NY,FRUITP		;ERASE OLD SCORE
	LDY I,20
	STA NY,FRUITP
90$:	RTS


	.SBTTL	GDOORS-HOW MANY GREEN DOORS ARE NEEDED
;
; EXIT (A)=NUMBER OF GREEN DOORS

GDOORS:	LDA OPTNS
	AND I,03
	ASL
	ORA I,10			;10,12,14 OR 16 GREEN DOORS
	RTS


	.SBTTL	GETINT-GET PLAYERS INITIALS FOR HIGH CORE
;GETINT-GET PLAYERS INITIALS FOR HIGH SCORE
;
;EXIT (CC)=POSITIVE FLAG SET IF WE ARE ENTERING INITIALS
GETINT:	LDA UPDFLG
	AND UPDFLG+1
	BPL 10$			;GET PLAYERS INITIALS
	RTS

10$:	LDA UPDFLG+1
	BMI 15$			;NOT PLAYER 2
	BIT CKIND
	BVC 15$			;NOT A COCKTAIL GAME
	BMI 15$			;ALREADY PLAYER 2
	JSR CKSET
	JSR INITSC		;INITIALIZE THE SCREEN
	JSR UPSCRE		;PUT UP SCORES FOR PLAYER 2
15$:	LDA NPLAYR
	BEQ 25$			;IF LAST GAME WAS 1 PLAYER GAME
	LDA I,0
	JSR MESS		;DISPLAY "PLAYER"
	LDY I,01
	LDX UPDFLG+1
	BPL 20$			;IF PLAYER 2
	DEY			;LDY I,01
20$:	STY PLAYR
	INY
	TYA
	ORA I,20
	JSR CHAR		;DISPLAY PLAYER NUMBER
25$:	LDA I,8
	JSR MESS		;DISPLAY "GREAT SCORE"
	LDA I,5
	JSR MESS		;DISPLAY "ENTER YOUR INITIALS"
	JSR SCORES		;PUT UP HIGH SCORE TABLE
	LDA I,PLYFLD+187&0FF
	LDY I,PLYFLD+187/100
	BIT CKIND
	BPL 30$			;IF NOT COCKTAIL
	LDA I,PLYFLD+238&0FF
	LDY I,PLYFLD+238/100
30$:	STA TEMP4
	STY TEMP4+1
	LDX PLAYR
	LDY X,UPDFLG
	STY TEMP2
	TYA
	CLC
	ADC UPDINT
	STA TEMP2+1		;INDEX FOR THE INITIAL WE ARE WORKING ON
	JSR INITAL		;DISPLAY INITIAL
	LDY TEMP2
	INY
	JSR INITAL		;DISPLAY INITIAL
	LDY TEMP2
	INY
	INY
	JSR INITAL		;DISPLAY THIRD INITIAL
	LDA FIRE1
	BIT CKIND
	BPL 51$			;NOT COCKTAIL NOW
	LDA FIRE2
51$:	AND I,05		;GET BOTH SWITCHES
	CMP I,05
	ROL STTMP0
	LDA STTMP0
	AND I,1F
	CMP I,18
	BNE 60$			;2 FRAMES OFF 3 FRAMES ON
	LDA I,2
	STA CHAN+11.		;SOUND FOR SELECTED INITIAL
	INC UPDINT
	LDA UPDINT
	CMP I,03
	BCC 55$			;IF WE ARE NOT DONE
52$:	LDX PLAYR
	LDA I,-1
	STA X,UPDFLG		;CLEAR UPDATING FLAG
	BIT CKIND
	BPL 53$			;IF NOT COCKTAIL
	JSR CKCLR		;CLEAR COCKTAIL INDICATORS
	JSR INITSC		;INITIALIZE THE SCREEN
	JSR UPSCRE		;PUT UP SCORES
	LDA UPDFLG
	BMI 62$			;PLAYER 1 DIDN'T MAKE IT TO HIGH SCORE TABLE
53$:	LDA UPDFLG
	AND UPDFLG+1
	BPL 54$			;ONE MORE PLAYER TO GO
62$:	JSR INITSC		;CLEAR THE SCREEN
	JSR COPYHS		;COPY HIGH SCORES TO EAROM BUFFER
54$:	LDX I,0
	STX UPDINT		;START NEXT PLAYER
	STX STTMP0		;DEBOUNCE FOR NEXT PLAYER
	RTS

55$:	INC TEMP2+1
	LDX TEMP2+1
	LDA I,0F7		;ABOUT 34 SECONDS
	STA FRAME+1		;RESET TIMEOUT
	LDA I,1
	STA X,INITL		;SET INITIAL TO A
60$:	LDA FRAME+1
	BEQ 52$			;TIME OUT - BACK TO ATTRACT
	LDA FRAME
	AND I,07
	BNE 90$			;DO NOT CHANGE INITIALS TOO FAST
	LDX I,0
	BIT CKIND
	BPL 65$			;IF NOT COCKTAIL PLAYER 2
	INX
65$:	LDY X,JOYS+2
	LDA I,-1
	CPY I,04
	BCC 70$			;IF JOYSTICK TO THE LEFT
	LDA I,1
	CPY I,0C
	BCC 90$			;JOYSTICK IS IN THE MIDDLE
70$:	LDX TEMP2+1
	CLC
	ADC X,INITL		;CHANGE INITIAL
	BMI 78$			;BEFORE A BLANK MUST BE Z
	CMP I,27.
	BCC 85$			;IF LESS THAN Z+1
	SBC I,27.		;BEFORE A COMES A BLANK
	BEQ 85$

78$:	CLC
	ADC I,27.		;MAKE IT A Z
85$:	STA X,INITL
	LDA I,2
	STA CHAN+3		;SOUND CHANGE OF INITIALS
90$:	LDA I,0			;MUST BE POSITIVE ON RETURN
	RTS


	.SBTTL	GOTFRT - PROCESS COLLISION WITH A FRUIT
;
;ENTRY	(Y)=INDEX INTO PLAYFIELD WINDOW
;	(OBST,OBST+1)=ADDDRESS OF PLAYFIELD WINDOW
;USES	A,X,Y,TEMP1, (TEMP3,TEMP3+1), (TEMP4,TEMP4+1)
GOTFRT:	LDA I,STR+4
	BIT CKIND
	BPL 60$			;IF NOT COCKTAIL
	LDA I,STR+5
60$:	CMP NY,OBST
	BNE 50$			;IF NOT LEFT HALF OF WATERMELON
	TYA
	CLC
	ADC I,20		;CORRECT INDEX TO RIGHT HALF
	TAY
50$:	TYA
	PHA			;SAVE Y
	LDA FRUITC
	BEQ 1$			;NO OTHER SCORES ON THE SCREEN
	JSR FRUITD		;DELETE OTHER SCORE
1$:	LDA OBST+1
	STA FRUITP+1
	PLA
	PHA
	TAY
	SEC			;MOVE LEFT ONE STAMP BECAUSE
	SBC I,20		;FRUIT IS RIGHT JUSTIFIED IN 2 STAMPS
	BCS 2$			;NO UNDERFLOW
	DEC FRUITP+1
2$:	CLC
	ADC OBST
	STA FRUITP		;SAVE ADDRESS OF SCORE
	BCC 3$			;NO OVERFLOW
	INC FRUITP+1
3$:	LDA NY,OBST		;GET FRUIT STAMP CODE
	CMP I,STR+4
	BCC 4$			;IF NOT A WATERMELON
	LDX PLAYR
	LDA X,MELON
	CLC
	ADC I,05
	AND I,NLEVEL-1		;GET NEXT MAZE NUMBER
	STA X,MELON
	LDX I,14
	BNE 5$			;ALWAYS

4$:	AND I,03
	TAX
	EOR FRUITT		;COMPARE WITH PREVIOUS FRUIT
	BMI 5$			;NO PREVIOUS FRUIT
	AND I,03
	BNE 5$			;DIFFERENT FRUIT
	LDA FRUITT
	TAX
	CLC
	ADC I,4			;ADD ONE TO COUNT
	CMP I,14
	BCS 5$			;DON'T EXCEED MAX
	TAX
5$:	STX FRUITT
	LDA X,91$		;LEFT PORTION OF SCORE
	LDY I,0
	BIT CKIND
	BPL 6$			;IF NOT COCKTAIL
	LDY I,20
6$:	STA NY,FRUITP
	CMP I,0
	BEQ 8$			;WE GOT A WATERMELON
	LDA I,30		;RIGHT PROTION OF SCORE
8$:	LDY I,20
	BIT CKIND
	BPL 7$			;IF NOT COCKTAIL
	LDY I,0
7$:	STA NY,FRUITP
	LDA I,80
	STA FRUITC		;SET DELAY BEFORE ERASING SCORE
	LDY X,92$		;SCORE VALUE
	LDA I,0
	JSR SCORE		;ADD TO SCORE
	LDX FRUITT
	CPX I,14
	BCC 9$			;IF NOT A WATERMELON
	LDY X,92$		;2X5000=10000PTS
	LDA I,0
	JSR SCORE
9$:	LDA FRUITP
	STA TEMP1
	LDA FRUITP+1
	LSR
	ROR TEMP1
	LSR
	LDA TEMP1
	ROR
	AND I,0F8		;IGNORE DIFFERENCE BETWEEN LEFT & RIGHT
	PHA
	CMP SBONUS+3
	BCS 10$			;IF WE ARE GOING LEFT TO RIGHT
	LDA I,0FF		;NO SECRET BONUS
10$:	STA SBONUS+3
	PLA
	CMP SBONUS+5
	BEQ 15$			;IF IN SAME COLUMN
	BCC 15$			;IF FURTHER TO THE RIGHT
	LDA I,0
15$:	STA SBONUS+5
	LDA FRUITP
	AND I,1F		;IGNORE DIFFERENCE BETWEEN TOP AND BOTTOM
	PHA
	CMP SBONUS+4
	BCS 20$			;IF WE ARE GOING FROM BOTTOM UP
	LDA I,0FF		;NO SECRET BONUS
20$:	STA SBONUS+4
	PLA
	CMP SBONUS+6
	BEQ 25$			;IF IN SAME ROW
	BCC 25$			;IF BELOW LAST FRUIT
	LDA I,0
25$:	STA SBONUS+6
	LDA I,18.
	LDX FRUITT
	CPX I,14
	BCS 28$			;IF WE GOT A WATERMELON
	LDA I,8
28$:	STA CHAN+3		;SOUND FOR PICKUP
	DEC FRUIT		;REDUCE COUNT OF FRUITS
	BNE 40$			;MORE FRUITS REMAIN
	JSR INITD		;INITIALIZE DOORS
40$:	PLA
	TAY			;RESTORE Y
	RTS

91$:	.BYTE 31,32,32,33	;STAMP CODES FOR FRUIT SCORES
	.BYTE 32,34,34,36
	.BYTE 33,36,36,38
	.BYTE 34,37,37,3A
	.BYTE 35,39,39,3B
	.BYTE 0
92$:	.BYTE 1,2,2,3		;SCORE VALUE FOR FRUIT/100
	.BYTE 2,4,4,6
	.BYTE 3,6,6,9
	.BYTE 4,8,8,12
	.BYTE 5,10,10,15
	.BYTE 50


	.SBTTL	MAZES-SHOW PLAYER THE NUMBER OF MAZES LEFT
MAZES:	LDA I,30
	STA DELAY		;SET DELAY
	LDA I,0
	LDX I,15.
10$:	STA X,MOBJC
	DEX
	BPL 10$			;REMOVE ALL MOTION OBJECTS
	JSR INITP		;INITIALIZE PLAYER
	JSR INITSC		;CLEAR THE SCREEN
	JSR DLIVES		;DISPLAY LIVES REMAINING
	LDA DOOR
	BMI 20$			;IF PLAYER IS IN DOOR
	LDA I,41.
	STA CHAN+2		;TURN ON WAKE UP CALL
20$:	LDA I,23.
	JSR MESS		;DISPLAY "NEW LIFE AT"
	SEC
	ROR HILITE		;LEAVE DIGITS IN RED
	LDX PLAYR
	LDA X,BONUSL+2
	SEC			;ZERO SUPPRESS
	JSR DIGIT2		;DISPLAY MSB
	LDA X,BONUSL
	JSR DIGIT2		;MIDDLE DIGITS
	CLC			;IN CASE OF WRAP AROUND OF THE SCORE
	LDA I,0
	JSR DIGIT2		;DISPLAY LSB
	ASL HILITE		;CLEAR HILIGHT FLAG
	LDA NPLAYR
	BEQ MAZES1		;IF 1 PLAYER GAME
	LDA I,0
	JSR MESS		;DISPLAY "PLAYER"
	LDX PLAYR
	INX			;1 OR 2
	TXA
	JSR DIGITZ		;DISPLAY DIGIT OF CURRENT PLAYER
MAZES1:	JSR INITB		;RESET BONUS TIMER FOR THE PLAYERS INFO
	LDA I,20.
	JSR MESS		;DISPLAY "ENTER"
	SEC
	ROR HILITE		;CHANGE COLORS OF NUMBERS
	LDX PLAYR
	LDA X,ALLMZS
	SEC			;ZERO SUPPRESS
	JSR DIGIT2		;DISPLAY NUMBER OF MAZES LEFT
	ASL HILITE		;BACK TO NORMAL COLORS
	LDA I,21.
	JSR MESS		;DISPLAY "GREEN DOORS"
	LDA I,22.
	JMP MESS		;DISPLAY "FOR 30000 POINTS"


	.SBTTL	MOVEH - MOVE HEADS AND TAILS
MOVEH:	LDA PEXPLD
	BEQ 5$			;PLAYER IS ALIVE
2$:	RTS

5$:	LDA DOOR
	BMI 2$			;IF PLAYER IS IN DOOR
	LDX I,NHEADS
10$:	DEX
	BMI 2$			;ALL DONE
	LDA X,HEADH
	BEQ 10$			;INACTIVE OBJECT
	LDA X,HEADS
	STA TEMP1+1
	AND I,0F
	AND FRAME
	BNE 10$			;NOT THE TIME TO UPDATE POSITION
	STA TEMP2		;ZERO IF NOT TURNING A CORNER
	LDA TEMP1+1
	LSR
	LSR
	LSR
	LSR
	AND I,03
	TAY
	LDA Y,95$
	CLC
	ADC X,HEADH		;NEW H POSITION
	STA X,HEADH
	LDA Y,96$
	CLC
	ADC X,HEADV		;NEW V POSITION
	STA X,HEADV
	LDY LEVEL
	LDA Y,HDTYPE
	AND I,0C0
	BNE 15$			;WE ARE NOT MOVING IN CIRCLES
	JSR MOVEH1		;CHECK FOR CHANGE IN DIRECTION
15$:	LDY X,HEADV
	LDA X,HEADH
	JSR OBSTAC		;GET PLAYFIELD POSITION
	LDY TEMP2
	BNE 40$			;IF WE TURNED A CORNER
	LDA TEMP1+1		;GET NEW DIRECTION (TAIL MAY CHANGE DIRECTION)
	AND I,10
	BNE 20$			;IF HORIZONTAL DIRECTION
	LDA X,HEADV
	JMP 25$

20$:	LDA X,HEADH
25$:	AND I,06
	LSR
	STA TEMP1
	LDA TEMP1+1
	LSR
	LSR
	AND I,0C		;GET DIRECTION
	ORA TEMP1
	BIT TEMP1+1
	BVS 30$			;IF A HEAD
	ORA I,10
	STA TEMP1
	LDY I,0
	LDA NY,OBST
	BEQ 80$			;NOBODY TO ERASE
35$:	LDY TEMP1
40$:	BIT CKIND
	BPL 50$			;IF NOT COCKTAIL
	TYA
	CLC
	ADC I,25
	TAY			;USE COCKTAIL INDEX
50$:	LDA Y,97$		;GET STAMP
	LDY I,0
	STA NY,OBST		;CHANGE PLAYFIELD STAMP
80$:	JSR MOVEH0		;KEEP FROM DESTROYING THE EDGE
	JMP 10$

30$:	STA TEMP1
	LDY I,0
	LDA NY,OBST
	AND I,7B
	CMP I,VER&7B
	BCS 80$			;IF A BODY OR CORNER IS ALREADY THERE
	CMP I,HOR&7B
	BEQ 80$			;IF A BODY IS ALREADY THERE
	BNE 35$			;ALWAYS

95$:	.BYTE 0,2,0,-2		;CHANGES IN H ACCORDING TO DIRECTION
96$:	.BYTE 2,0,-2,0		;CHANGE IN V ACCORDING TO DIRECTION
97$:	.BYTE HOR,44,45,46	;HEAD PICTURES
	.BYTE 4C,4D,4E,VER
	.BYTE 40,HOR,42,41
	.BYTE VER,4A,49,48
	.BYTE 0,42,41,40	;TAIL PICTURES
	.BYTE 4A,49,48,0
	.BYTE 46,0,44,45
	.BYTE 0,4C,4D,4E
	.BYTE LRHT,LLFT,URHT,ULFT	;CORNER PICTURES FOR HEAD
	.BYTE 0			;CORNER PICTURE FOR A TAIL
	.BYTE 43,40,41,42	;HEAD COCKTAIL PICTURES
	.BYTE 48,49,4A,4B
	.BYTE 44,47,46,45
	.BYTE 4F,4E,4D,4C
	.BYTE 0,46,45,44	;TAIL COCKTAIL PICTURES
	.BYTE 4E,4D,4C,0
	.BYTE 42,0,40,41
	.BYTE 0,48,49,4A
	.BYTE ULFT,URHT,LLFT,LRHT ;CORNER PICTURES
	.BYTE 0

MOVEH0:	LDA TEMP1+1
	LDY X,HEADH
	AND I,20
	BNE 20$			;IF DECREASING IN H AND V
	LDA X,HEADV		;CHECK FOR LEFT AND UPPER EDGE
	CMP I,0E8
	BCC 10$			;NOT ON LEFT EDGE
	LDA I,08		;RESET TO RIGHT
10$:	CPY I,0E6
	BCC 40$			;NOT ON UPPER EDGE
	LDY I,16
	BNE 40$			;ALWAYS

20$:	LDA X,HEADV
	CMP I,0B
	BCS 30$			;IF NOT AT THE RIGHT
	LDA I,0EA
30$:	CPY I,19
	BCS 40$			;NOT AT LOWER EDGE
	LDY I,0E8
40$:	STA X,HEADV		;NEW POSITIONS IF ANY
	TYA
	STA X,HEADH
	RTS


;ENTRY	(X)=CURRENT HEAD INDEX
;	(TEMP1+1)=CURRENT "HEADS"
;	(TEMP2)=0
;EXIT	(TEMP2)=INDEX OF CORNER IF DIRECTION HAS CHANGED FOR A HEAD ELSE 0
;	(TEMP1+1)=NEW DIRECTION IF ANY
;USES	A,Y,(TEMP1-TEMP1+1),(TEMP2-TEMP2+1)
MOVEH1:	LDA X,HEADH
	ROL
	LDA X,HEADV
	AND I,80
	ROL
	ROL
	STA TEMP2+1		;0-3=INDEX FOR CORRESPONDING CORNER
	LDA TEMP1+1		;GET CLOCKWISE AND HEAD/TAIL BIT
	LSR
	LSR
	LSR
	LSR
	AND I,0C
	ORA TEMP2+1
	TAY			;INDEX INTO CORNER TABLE
	LDA TEMP2+1
	BEQ 10$			;IF LOWER RIGHT CORNER
	CMP I,03
	BEQ 10$			;IF UPPER LEFT CORNER
	LDA X,HEADH		;H+V=INDEPENDENT OF WHICH CONCENTRIC RECTANGLE
	CLC
	ADC X,HEADV
	JMP 20$

10$:	LDA X,HEADH		;H-V=INDEPENDENT OF WHICH RECTANGLE
	SEC
	SBC X,HEADV
20$:	CMP Y,92$		;COMPARE WITH CONSTANT
	BNE 90$			;NOT TO THE CORNER YET
	LDA TEMP1+1
	AND I,30		;OLD DIRECTION
	LSR
	LSR
	PHA
	ORA TEMP2+1
	TAY
	LDA Y,95$
	ASL
	PLA
	BCS 90$			;WRONG DIRECTION
	STY TEMP1		;SAVE Y
	BIT TEMP1+1
	BVS 44$			;IF A HEAD
	ADC I,04		;CARRY IS CLEAR
	AND I,0C		;CHANGE INDEX AND H,V CORRECTION
	BIT TEMP1+1
	BMI 44$			;CLOCKWISE
	EOR I,08		;CHANGE CORRECTION FOR COUNTERCLOCKWISE TAIL
44$:	LSR
	LSR
	LSR
	TAY
	BCS 45$			;GOING HORIZONTALLY
	LDA Y,96$
	ADC X,HEADV		;CARRY IS CLEAR
	STA X,HEADV		;CORRECT VERTICAL POSITION
	JMP 48$

45$:	LDA Y,96$
	CLC
	ADC X,HEADH
	STA X,HEADH		;CORRECT HORIZONTAL POSITION
48$:	BIT TEMP1+1
	BVC 50$			;IF A TAIL
	LDA TEMP2+1
	ORA I,20
	STA TEMP2		;NON-ZERO IF HEAD TURNED A CORNER
50$:	LDY TEMP1
	LDA X,HEADS
	AND I,0CF
	ORA Y,95$		;ADD NEW DIRECTION
	STA X,HEADS
	STA TEMP1+1
90$:	RTS

92$:	.BYTE 0E,0,-10,-2	;COUNTERCLOCKWISE TAIL
	.BYTE 14,-6,-0A,-8	;COUNTERCLOCKWISE HEAD
	.BYTE 0E,0,-10,-2	;COUNTERWISE TAIL
	.BYTE 8,6,-16,4		;CLOCKWISE HEAD
95$:	.BYTE -1,10,-1,30	;NEW DIRECTIONS FOR GOING LEFT
	.BYTE -1,-1,0,20	;NEW DIRECTIONS FOR GOING UP
	.BYTE 10,-1,30,-1	;NEW DIRECTIONS FOR GOING RIGHT
	.BYTE 0,20,-1,-1	;NEW DIRECTIONS FOR GOING DOWN
96$:	.BYTE -6,+6		;CORRECTIONS FOR HORIZONTAL AND VERTICAL


	.SBTTL	RESTOR - RESTORE THE FRUITS ON THE SCREEN
RESTOR:	LDA FRUIT
	BPL 2$			;IF FRUITS ARE NOT TO BE INITIALIZED
	JMP INITS		;INITIALIZE FRUITS AND SPECIAL BONUSES

2$:	LDA I,PLYR1B/100
	LDY I,PLYR1B&0FF
	LDX PLAYR
	BEQ 5$			;IF PLAYER 1 IS UP
	LDA I,PLYR2B/100
	LDY I,PLYR2B&0FF
5$:	STA TEMP2+1
	STY TEMP2
	LDA I,PLYFLD+23&0FF
	STA TEMP3
	LDA I,PLYFLD+23/100
	STA TEMP3+1		;ADDRESS OF FIRST FRUIT
	LDY I,80.
10$:	LDA NY,TEMP2		;GET FRUIT STAMP OR BLANK
	BEQ 15$			;IF NO FRUIT HERE
	STY TEMP1
	LDY I,20
	STA NY,TEMP3		;PUT FRUIT BACK
	CMP I,STR+4
	BCC 14$			;IF NOT HALF OF WATERMELON
	LDY I,0
	EOR I,01		;GET OTHER HALF OF WATERMELON
	STA NY,TEMP3
14$:	LDY TEMP1		;RESTORE Y
15$:	DEY
	BMI 50$			;ALL DONE
	LDA TEMP3
	CPY I,2C
	BNE 25$			;SKIP OVER THE MIDDLE
	ADC I,3F		;CARRY WAS SET
25$:	CLC
	ADC I,03
	STA TEMP3		;NEXT ADDRESS FOR FRUIT
	AND I,1F
	CMP I,1E
	BCC 10$			;TRY AGAIN FOR NEXT FRUIT
	LDA TEMP3		;CARRY IS SET
	ADC I,44
	STA TEMP3		;SKIP OVER TWO COLUMNS
	BCC 10$			;NO OVERFLOW
	INC TEMP3+1
	BNE 10$			;ALWAYS

50$:	LDA FRUIT
	BNE 60$			;IF SOME FRUITS LEFT
	JSR INITD		;INITIALIZE DOORS
60$:	RTS


	.SBTTL	SAVE - SAVE STATE OF THE FRUITS
SAVE:	LDA I,PLYR1B/100
	LDY I,PLYR1B&0FF
	LDX PLAYR
	BEQ 5$			;IF PLAYER 1 IS UP
	LDA I,PLYR2B/100
	LDY I,PLYR2B&0FF
5$:	STA TEMP2+1
	STY TEMP2
	LDA I,PLYFLD+43&0FF
	STA TEMP3
	LDA I,PLYFLD+43/100
	STA TEMP3+1
	LDA I,80.		;NUMBER OF FRUITS POSSIBLE
	STA TEMP1
10$:	LDY I,0
	LDA NY,TEMP3		;GET PLAYFIELD STAMP
	CMP I,STR
	BCS 20$			;WE HAVE A FRUIT
	LDA I,0			;LEAVE A BLANK
20$:	LDY TEMP1
	STA NY,TEMP2		;SAVE THE STATE OF THIS STAMP
	LDA TEMP3
	CPY I,2D
	BNE 25$			;SKIP OVER THE MIDDLE
	ADC I,3F		;CARRY IS SET
25$:	DEC TEMP1
	BMI 50$			;ALL DONE
	CLC
	ADC I,03
	STA TEMP3		;NEXT STAMP
	AND I,1F
	CMP I,1E
	BCC 10$			;GET NEXT FRUIT
	LDA TEMP3		;CARRY IS SET
	ADC I,44
	STA TEMP3		;SKIP OVER TWO COLUMNS
	BCC 10$			;NO OVERFLOW
	INC TEMP3+1
	BNE 10$			;ALWAYS

50$:	RTS

	.SBTTL	SCORE - SCORE POINTS FOR THE PLAYER
;
;ENTRY	(A)=LSB OF SCORE TO ADD
;	(Y)=MSB OF SCORE TO ADD
;USES	A,X,Y,TEMP1,(TEMP4,TEMP4+1)
SCORE:	LDX MODE
	BNE 90$			;IF NOT IN PLAY MODE
	SED
	LDX PLAYR
	CLC
	ADC X,SCORE0
	STA X,SCORE0
	TYA
	ADC X,SCORE1
	STA X,SCORE1
	LDA I,0
	ADC X,SCORE2
	STA X,SCORE2
	LDA X,SCORE1
	CMP X,BONUSL
	LDA X,SCORE2
	SBC X,BONUSL+2
	BNE 25$			;NOT AT BONUS LEVEL YET
	JSR BONUS1		;GET BONUS LEVELS
	CLC
	ADC X,BONUSL
	STA X,BONUSL
	LDA Y,BONUSV+1
	BEQ 25$			;NO BONUS ALLOWED
	ADC X,BONUSL+2
	STA X,BONUSL+2		;GET NEXT BONUS LEVEL
	CLD
	LDA X,LIVES
	CMP I,06
	BEQ 25$			;ALREADY AT MAX NUMBER OF LIVES
10$:	BCS 10$			;OOPS - WHERE IS WATCHDOG
	INC X,LIVES
	LDA I,20.
	STA CHAN+13.		;TURN ON BONUS LIFE SOUND
	JMP DLIVES		;DISPLAY NEW LIFE

25$:	CLD
90$:	RTS


	.SBTTL	SCORES-DISPLAY HIGH SCORES
SCORES:	SEC
	ROR HILITE		;SET FLAG
	LDA I,7
	JSR MESS		;"HIGH SCORES"
	ASL HILITE		;CLEAR FLAG
	LDY I,0
	LDX I,PLYFLD+15A&0FF	;FOR PLAYER 1'S VIEWPOINT ONLY
	LDA I,PLYFLD+15A/100
	BIT CKIND
	BPL 10$			;IF NOT COCKTAIL
	LDA I,PLYFLD+265/100
	LDX I,PLYFLD+265&0FF
10$:	STX TEMP4
	STA TEMP4+1		;STARTING ADDRESS FOR THIS LINE
	LDA Y,HSCORE+2
	STY TEMP2		;SAVE INDEX INTO "HSCORE"
	SEC			;ZERO SUPPRESSION
	JSR DIGIT2
	LDY TEMP2
	LDA Y,HSCORE+1
	JSR DIGIT2		;2 MORE DIGITS
	LDY TEMP2
	LDA Y,HSCORE
	CLC			;NO ZERO SUPPRESSION
	JSR DIGIT2		;DISPLAY DIGITS
	LDA I,0
	JSR CHAR		;PUT OUT A BLANK
	LDY TEMP2
	JSR INITAL		;PUT UP INITIAL
	INC TEMP2
	LDY TEMP2
	JSR INITAL		;PUT UP 2ND INITIAL
	INC TEMP2
	LDY TEMP2
	JSR INITAL		;PUT UP 3RD INITIAL
	LDA TEMP4
	AND I,1F
	BIT CKIND
	BPL 20$			;IF NOT COCKTAIL
	ORA I,PLYFLD+265&0E0
	TAX
	INX			;NEXT LINE DOWN
	LDA I,PLYFLD+265/100
	BNE 30$			;ALWAYS

20$:	ORA I,PLYFLD+15A&0E0	;40+LINE NUMBER.
	TAX
	DEX			;NEXT LINE DOWN FOR SCORES
	LDA I,PLYFLD+15A/100
30$:	LDY TEMP2
	INY
	CPY I,3*NSCORE
	BCC 10$			;IF MORE TABLES
	RTS


	.SBTTL	SELECT - SELECT STARTING MAZE
SELECT:	LDX MODE
	BMI 1$			;IF IN ATTRACT
	CPX I,02
	BCS 2$			;CORRECT MODE
1$:	RTS

2$:	BEQ 10$			;IF NOT FIRST TIME THRU
	DEC MODE		;MODE=2
	LDA I,0
	LDX I,15.
5$:	STA X,MOBJC		;TURN OFF ALL ALIENS, SHOTS AND THE PLAYER
	DEX
	BPL 5$
	JSR INITSC		;INITIALIZE THE SCREEN
	JSR SELEC1		;PUT UP MAZE NUMBERS
	LDA SELEC0		;STARTING MAZE NUMBER
	STA LEVEL
	LDX I,0
	STX PLAYA
	JSR SELEC4		;SET CURRENT MAZE TO DIFFERENT COLORS
	INC COLIND		;START COLOR CHANGE
	LDA I,15.
	JSR MESS		;DISPLAY "SELECT MAZE" MESSAGE
	LDA I,19.
	JSR MESS		;DISPLAY "PUSH BUTTON TO START"
	LDA I,9
	STA TIMER		;START TIMER
	LDA NPLAYR
	BEQ 10$			;ONLY A ONE PLAYER GAME
	LDA I,0
	JSR MESS		;DISPLAY "PLAYER"
	LDY PLAYR
	INY
	TYA
	ORA I,20
	JSR CHAR		;DISPLAY PLAYER NUMBER
10$:	JSR WATERM		;DISPLAY WHERE WATERMELON IS
	LDA $INTCT
	AND I,03
	CMP I,01		;TO PREVENT TEARING
	BCC 10$			;WAIT FOR THE MIDDLE OF THE SCREEN
	LDA FIRE1		;STOP THIS MODE WHEN A SWITCH IS PRESSED
	BIT CKIND
	BPL 20$			;IF NOT COCKTAIL PLAYER 2
	LDA FIRE2
20$:	AND I,05
	CMP I,05
	ROL STTMP0		;DEBOUNCE SWITCH
	LDA STTMP0
	AND I,1F
	EOR I,18
	BNE 50$			;NO EDGE OF A SWITCH
25$:	DEC MODE		;MODE=1 BEFORE STARTING
	LDX PLAYR
	LDA PLAYA
	CMP I,4
	BCC 28$			;IF NO CONTINUATION
	LDA HALLMZ
	STA X,ALLMZS		;SET NUMBER OF GREEN DOORS LEFT
	LDY I,NLEVEL-1
26$:	LDA Y,LEVELH
	STA Y,LEVELC
	DEY
	BPL 26$			;COPY COUNT OF MAZE REPITITIONS
28$:	JSR BONUS1
	LDA Y,BONUSV+1
	BEQ 45$			;NO BONUS VALUES ALLOWED
	SED
40$:	LDA Y,BONUSV		;SCORE IS ALWAYS LESS THAN 500,000
	CLC
	ADC X,BONUSL		;ELSE BEWARE OF SCORE=999,900 CAUSING INFINITE LOOP
	STA X,BONUSL
	LDA Y,BONUSV+1
	ADC X,BONUSL+2
	STA X,BONUSL+2
	CMP X,SCORE2
	BCC 40$			;SET BONUS LEVEL
	BNE 42$			;IF HIGH BYTE DOES NOT MATCH
	LDA X,SCORE1
	CMP Y,BONUSL
	BCS 40$			;ONE MORE INCREMENT
42$:	CLD
45$:	LDA I,-1
	STA FRUIT		;START FRUITS AND SPECIAL BONUSES
	LDA I,0
	STA CHAN+8		;STOP WARNING
	DEC X,LIVES		;DECREASE COUNT OF LIVES
	JSR MAZES		;NUMBER OF MAZES LEFT
49$:	RTS

50$:	LDA I,17.
	JSR MESS		;DISPLAY "TIME"
	LDA TIMER
	JSR DIGITZ		;DISPLAY DIGIT
	LDA FRAME
	AND I,3F
	BNE 60$			;EVERY SECOND
	DEC TIMER		;DECREASE TIMER
	LDA TIMER
	BEQ 25$			;IF TIME HAS ELAPSED START GAME
	CMP I,3
	BNE 60$			;NOT TIME FOR WARNING
	LDA I,24.
	STA CHAN+8
60$:	LDX I,0
	BIT CKIND
	BPL 61$			;IF NOT IN A COCKTAIL GAME
	INX
61$:	LDA I,0
	LDY X,JOYS+2
	CPY I,4
	BCC 62$			;IF TO THE LEFT
	CPY I,0C
	BCC 49$			;IF IN THE MIDDLE
	LDA I,2
62$:	LDY X,JOYS
	CPY I,04
	BCC 64$			;IF JOYSTICK IS DOWN
	CPY I,0C
	BCC 49$			;IF IN THE MIDDLE
	ADC I,0			;ADD ONE (CARRY IS SET)
64$:	LDY PLAYA		;A=INDEX FOR WHICH CORNER
	CPY I,04
	BCC 70$			;IF NOT IN THE MIDDLE
	TAX
	EOR PLAYA
	EOR I,07
	BNE 68$			;DIFFERENT DIRECTION FROM WHENCE IT CAME
	LDA FRAME
	AND I,3F
	BNE 90$			;TIME OUT BEFORE PASSING THRU MIDDLE
68$:	TXA
	PHA
	LDX PLAYR
	LDA I,0
	STA X,SCORE0		;RESET SCORES TO ZERO
	STA X,SCORE1
	STA X,SCORE2
	LDY X,MELON		;RESTORE WHERE WATERMELON IS
	LDA HMELON
	STA X,MELON
	STY HMELON
	PLA
	BPL 74$			;ALWAYS

70$:	CMP PLAYA
	BEQ 90$			;NO CHANGE FROM LAST TIME
	LDY HLEVEL
	BMI 74$			;IF NO CONTINUATION
	TAX
	EOR PLAYA
	CMP I,03
	TXA
	BCC 74$			;IF NOT A DIAGONAL MOVE
	LDX PLAYR
	LDA HSCOR		;SHOW PLAYERS CONTINUATION SCORE
	STA X,SCORE0
	LDA HSCOR+1
	STA X,SCORE1
	LDA HSCOR+2
	STA X,SCORE2
	LDA HMELON		;SHOW WHERE NEW WATERMELON
	LDY X,MELON
	STA X,MELON
	STY HMELON
	LDA PLAYA
	ORA I,4			;PUT SELECTION IN THE MIDDLE
	STA FRAME		;WAIT ABOUT 1 SECOND TO DEBOUNCE GOING THRU MIDDLE
74$:	LDX PLAYA
	STA PLAYA		;NEW PLAYER POSITION
	JSR SELEC4		;CHANGE COLOR OF CURRENT BLOCK
	LDA I,02		;SOUND CHANGE
	STA CHAN+3
	LDX PLAYA
	LDA X,SELEC0		;GET MAZE NUMBER
	CPX I,4
	BCC 80$			;A CORNER MAZE
	LDA HLEVEL		;HIGH SCORE MAZE #
80$:	STA LEVEL		;NEW STARTING MAZE NUMBER
	JSR SELEC4		;CHANGE COLOR OF NEW BLOCK
	INC COLIND		;SIGNAL FOR COLOR CHANGE
90$:	RTS


SELEC0:	.BYTE 19.,28.,12.,3	;STARTING MAZE NUMBERS


SELEC1:	JSR SELEC3		;DRAW MIDDLE IF NEEDED
	LDX I,0
	JSR SELEC2		;DRAW UPPER RIGHT CORNER
	LDX I,2
	JSR SELEC2		;DRAW LOWER RIGHT CORNER
	LDX I,4
	JSR SELEC2		;DRAW LOWER LEFT CORNER
	LDX I,6			;DRAW UPPER LEFT CORNER
SELEC2:	LDA X,90$
	STA TEMP4
	LDA X,90$+1
	STA TEMP4+1		;POSITION OF MAZE PICTURE
	STX TEMP1		;SAVE X
	LDA X,95$+1
	PHA
	LDA X,95$		;GET MAZE NUMBERS
	LDX I,0
	BIT CKIND
	BPL 10$			;IF NOT COCKTAIL
	LDX I,2
10$:	LDY X,97$
	STA NY,TEMP4
	PLA
	LDY X,97$+1
	STA NY,TEMP4
	LDY I,0			;PUT EDGE AROUND MAZE MESSAGE
	LDA I,LLFT+80
	BIT CKIND
	BPL 18$			;IF NOT COCKTAIL
	LDA I,URHT+80
18$:	STA NY,TEMP4
	LDX I,3
	INY
	LDA I,VER+80&0FB
20$:	STA NY,TEMP4		;PUT OUT LEFT EDGE
	INY
	DEX
	BPL 20$
	LDA I,ULFT+80
	LDX I,LRHT+80
	BIT CKIND
	BPL 25$			;IF NOT COCKTAIL
	LDA I,LRHT+80
	LDX I,ULFT+80
25$:	STA NY,TEMP4
	LDY I,0E0
	TXA			;DO RIGHT EDGE
	STA NY,TEMP4
	LDX I,3
	INY
	LDA I,VER+80&0FB
30$:	STA NY,TEMP4
	INY
	DEX
	BPL 30$
	LDA I,URHT+80
	BIT CKIND
	BPL 35$			;IF NOT COCKTAIL
	LDA I,LLFT+80
35$:	STA NY,TEMP4
	CLC
	LDY I,20		;DO UPPER EDGE
	LDX I,5
40$:	LDA I,HOR+80&0FB
	STA NY,TEMP4
	TYA
	ADC I,5
	TAY
	LDA I,HOR+80&0FB
	STA NY,TEMP4		;DO LOWER EDGE
	TYA
	ADC I,20-5
	TAY
	DEX
	BPL 40$
	SEC
	ROR HILITE		;SET HIGHLITE
	LDA TEMP1
	LSR			;0,1,2 OR 3
	ADC I,28.
	JSR MESS		;DISPLAY "MAZE"
	ASL HILITE		;CLEAR HIGHLITE
	RTS

SPOS	=.
90$:	.WORD PLYFLD+23		;POSITION FOR LOWER LEFT CORNER OF
	.WORD PLYFLD+37		;PLAYFIELD FOR MAZE DRAWING
	.WORD PLYFLD+2A3
	.WORD PLYFLD+2B7
	.WORD PLYFLD+0EF
	.WORD PLYFLD+0EC
95$:	.BYTE 0A2,0A0		;STARTING MAZE NUMBER
	.BYTE 0A2,0A9
	.BYTE 0A1,0A3
	.BYTE 080,0A4
97$:	.BYTE 62,82		;POSITIONS FOR MAZE NUMBER
	.BYTE 83,63


;
; ENTRY	(LEVEL+1)=CURRENT MAZE NUMBER
SELEC3:	LDA HLEVEL
	BMI SPOS-1		;IF NO CONTINUATION GAME
	LDX I,0
	BIT CKIND
	BPL 5$			;IF NOT COCKTAIL
	LDX I,6
5$:	LDA X,90$		;BASE ADDRESS OF LOWER LEFT CORNER
	STA TEMP4
	CLC
	ADC I,04		;LEAVES CARRY CLEAR
	STA TEMP2
	ADC I,0E0-4
	STA TEMP3
	LDA X,90$+1
	STA TEMP4+1
	STA TEMP2+1
	ADC I,01		;CARRY CLEAR FROM PREVIOUS ADD
	STA TEMP3+1
	LDA X,90$+2		;LOWER LEFT CORNER
	LDY I,0
	STA NY,TEMP4
	LDA X,90$+3		;UPPER LEFT CORNER
	STA NY,TEMP2
	LDA X,90$+4
	STA NY,TEMP3		;LOWER RIGHT CORNER
	LDA X,90$+5
	LDY I,4
	STA NY,TEMP3		;UPPER RIGHT CORNER
	LDY I,3
	LDA I,VER+80&0FB
10$:	STA NY,TEMP4
	STA NY,TEMP3
	DEY
	BNE 10$			;DO LEFT AND RIGHT EDGE
	LDY I,0E0
20$:	LDA I,HOR+80&0FB
	STA NY,TEMP4
	STA NY,TEMP2
	TYA
	SEC
	SBC I,20
	TAY
	INC TEMP4+1
	INC TEMP2+1
	LDA I,HOR+80&0FB
	STA NY,TEMP4
	STA NY,TEMP2
	DEC TEMP4+1
	DEC TEMP2+1
	TYA
	BNE 20$			;DO TOP AND BOTTOM EDGE
	SEC
	ROR HILITE		;SET HILITE
	LDA I,27.
	JSR MESS		;DISPLAY "CONTINUE"
	LDA I,18.
	JSR MESS		;DISPLAY "LAST GAME"
	LDA I,32.
	JSR MESS		;DISPLAY "MAZE"
	LDA HLEVEL
	CLC
	ADC I,01		;REMEMBER WE STORE THE NUMBERS 0 TO N-1 NOT 1 TO N
	CMP I,0A
	BCC 40$			;ZERO SUPPRESS
	LDY I,-1
30$:	SBC I,0A
	INY
	BCS 30$			;CONVERT HEX TO DECIMAL (TEN DIGIT)
	ADC I,0A
	PHA
	TYA
	ORA I,20
	JSR CHAR		;MSB OF MAZE NUMBER
	PLA
40$:	ORA I,20
	JSR CHAR		;DISPLAY MAZE NUMBERS
	ASL HILITE		;CLEAR HIGHLITE FLAG
	RTS

90$:	.WORD PLYFLD+0EF
	.BYTE LLFT+80,ULFT+80,LRHT+80,URHT+80
	.WORD PLYFLD+0EC
	.BYTE URHT+80,LRHT+80,ULFT+80,LLFT+80


;
;ENTRY (A)=CURRENT MAZE NUMBER (4,12,20,28)
SELEC4:	TXA			;2*X
	ASL
	TAX
	CPX I,8
	BCC 10$			;IF NOT IN THE CENTER
	LDX I,8
	BIT CKIND
	BPL 5$			;IF NOT COCKTAIL
	LDX I,10.
5$:	JSR 10$			;RIGHT HALF OF CENTER BOX
	INC TEMP4+1
	BNE 14$			;DO RIGHT HALF OF BLOCK

10$:	LDA X,SPOS
	STA TEMP4		;SET BASE ADDRESS OF PLAYFIELD
	LDA X,SPOS+1
	STA TEMP4+1
14$:	LDY I,0
15$:	LDX I,5
20$:	LDA NY,TEMP4
	EOR I,80
	STA NY,TEMP4
	INY
	DEX
	BPL 20$			;DO ONE COLUMN
	TYA
	CLC
	ADC I,20-6
	TAY
	BCC 15$			;DO 8 COLUMNS
	RTS


	.SBTTL	SETCOL - SET COLORS
;
;THE COLORS WILL NOT CHANGE
;UNTIL VBLANK TO PREVENT
;TEARING ON THE VIDEO SCREEN
;
;COLOR TABLE ENTRIES:
;	0-EDGE OF MAZE
;	1-SHOOTING AND RING INVADER
;	2-SHOOTING AND RING INVADER
;	3-SHOOTING AND RING INVADER
;	PLAYERS BODY=BLUE
;	PLAYERS EYELIDS=RED
;	PLAYERS EYES=WHITE
;	PLAYERS NOSE=RED
;	PLAYERS FEET=BROWN
;	ROCK =BROWN
;	PART OF ROCK =YELLOW
;	BUZZ SAW=BROWN
;	TURNSTILES=RED
;	THICK SOUP=GRAY
;	FRUIT COLORS=YELLOW, RED, GREEN
;	ALPHANUMERICS=WHITE
;	CIRCLE AROUND COPYRIGHT=RED
;
;ENTRY	(COLIND)=NON-ZERO TO CHANGE COLORS
;		 (DOOR)=7F WHEN DOORS JUST OPENED
;USES A,X,Y
SETCOL:	LDA LEVEL
	ASL
	ASL
	TAX			;X=INDEX INTO COLOR TABLE
	BIT VBLANK
	BPL 2$			;DO NOT CHANGE COLORS TIL VBLANK
	LDA COLIND
	BNE 5$			;COLOR CHANGE NOW
	JMP 50$

2$:	RTS

5$:	DEC COLIND		;CLEAR FOR NEXT TIME
	LDA I,0F
	STA ANCOL		;BACKGROUNDS ARE BLACK
	STA ANCOL+4
	STA ANCOL+8
	STA ANCOL+6		;TURN OFF DOOR COLORS
	STA ANCOL+0C
	LDA I,6			;BLUE
	STA ANCOL+0A		;PLAYERS BODY
	STA MOCOL+0E
	LDA I,0E		;WHITE
	STA ANCOL+0B		;PLAYERS EYES
	STA MOCOL+0F
	STA ANCOL+1		;ALPHANUMERICS
	LDA I,0C		;RED
	STA MOCOL+0D		;PLAYERS EYELIDS
	STA ANCOL+9		;TURNSTILE TOO
	STA ANCOL+0F		;FRUIT COLORS
	STA ANCOL+3		;CIRCLE AROUND COPYRIGHT
	LDA I,01		;BROWN
	STA MOCOL+9		;PLAYERS FEET AND ROCK AND BUZZ SAW
	LDA I,0			;YELLOW
	STA MOCOL+0A		;PART OF ROCK
	STA ANCOL+0D		;FRUIT COLORS
	LDA I,9			;DARK GREY
	STA ANCOL+2		;THICK SOUP COLOR AND CIRCLE AROUND COPYRIGHT
	LDA I,0A		;GREEN
	STA ANCOL+0E		;FRUIT COLOR
	LDA X,COLORS
	STA ANCOL+5		;EDGE OF SCREEN
	LDY MODE
	CPY I,02
	BNE 10$			;IF NOT SELECTING A MAZE
	LDA I,9			;GREY
	STA ANCOL+9		;OTHER ALPHANUMERICS
	STA ANCOL+0D		;OTHER MAZE COLOR
10$:	LDA X,COLORS+1
	STA MOCOL+1		;SHOOTING INVADER
	STA MOCOL+5
	LDA X,COLORS+2
	STA MOCOL+2		;SHOOTING INVADER
	STA MOCOL+6
	LDA X,COLORS+3
	STA MOCOL+3		;SHOOTING INVADER
	STA MOCOL+7
50$:	LDA MODE
	BMI 52$			;IF IN ATTRACT
	BEQ 52$			;IF IN GAME PLAY
	LDA I,0C		;RED
	STA MOCOL+3		;WATERMELON COLOR
	LDA I,0A		;GREEN
	STA MOCOL+2		;WATERMELON COLOR
52$:	LDA DOOR
	CMP I,0FF
	BEQ 60$			;IF CLOSING DOORS IN MODE=1
	CMP I,7F
	BNE 90$			;IF DOORS DID NOT JUST OPEN
	DEC DOOR
	JSR CLRFRT		;CLEAR FRUIT NEAR PLAYERS SCORE
60$:	LDA I,0C		;RED
	STA ANCOL+0C		;SET DOOR COLORS
	LDA I,0A		;GREEN
	STA ANCOL+0E
	LDA I,6			;BLUE
	STA ANCOL+0F		;MYSTERY DOOR
	LDA X,COLORS		;EDGE OF SCREEN COLOR
	STA ANCOL+0D
90$:	RTS

COLORS:	.BYTE 0,0C,0A,0E	;MAZE 1
	.BYTE 1,2,8,0C
	.BYTE 7,0A,2,0
	.BYTE 4,1,0A,2
	.BYTE 0E,2,8,0C
	.BYTE 5,0C,0E,0A
	.BYTE 6,0A,2,0
	.BYTE 2,0,3,4		;MAZE 8
	.BYTE 5,0C,0E,0A
	.BYTE 4,2,8,0C
	.BYTE 1,2,8,0C
	.BYTE 0,0C,0A,0E
	.BYTE 0E,1,0A,2
	.BYTE 7,0A,2,0
	.BYTE 2,0,3,4
	.BYTE 6,0A,2,0		;MAZE 16
	.BYTE 0,8,0E,9
	.BYTE 1,0,0E,6
	.BYTE 2,0B,0E,8
	.BYTE 3,6,0,0B
	.BYTE 4,0C,0,2
	.BYTE 5,0E,0D,2
	.BYTE 6,0B,2,6
	.BYTE 7,0C,0A,1		;MAZE 24
	.BYTE 8,9,0D,6
	.BYTE 0E,6,3,0A
	.BYTE 0B,7,4,6
	.BYTE 0D,8,0E,9
	.BYTE 7,0E,6,1
	.BYTE 3,0B,0A,3
	.BYTE 8,4,0,0E
	.BYTE 0B,0E,1,6		;MAZE 32


	.SBTTL	SOUNDS - SOUND ROUTINE
;
;ENTRY (MODE)=0 FOR PLAY MODE
;      (CHAN)=INDEX FOR ALL CHANNELS (2 POKEYS)
;EXIT  (CHAN)=UPDATED FOR NEXT FRAME
SOUNDS:	LDX I,0			;NUMBER OF SOUNDS
10$:	LDA X,MASK
	AND FRAME
	BNE 49$			;CHECK REPEAT COUNT
	STX TEMP1		;SAVE INDEX
	CPX I,08
	BCS 12$			;IF HIGH PRIORITY SOUND
	LDA X,CHAN+8
	BNE 49$			;LET HIGH PRIORITY SOUND FINISH
12$:	LDA X,CHAN
	BEQ 23$			;NO SOUND ON THIS CHANNEL
	DEC X,CHAN		;DECREASE COUNT
	TAY
	LDA UPDFLG
	AND UPDFLG+1
	BPL 14$			;IF ENTERING INITIALS
	LDA MODE
	BMI 23$			;IF IN ATTRACT
14$:	TXA
	ASL
	TAX
	LDA X,FREQ+1
	BEQ 30$			;USE CONSTANT FREQUENCY
	STA TEMP2+1
	LDA X,FREQ
	STA TEMP2
	LDA NY,TEMP2		;GET CURRENT VALUE FOR INDEX
	BNE 15$			;IF A FREQ IS PRESENT
	PHA
	BEQ 20$			;TURN OFF VOLUME

15$:	PHA
	LDA X,CONT+1
	BEQ 40$			;USE CONSTANT VOLUME AND AUDIO CONTROL
	STA TEMP2+1
	LDA X,CONT
	STA TEMP2
	LDA NY,TEMP2
20$:	PHA
	TXA
	AND I,0F		;USE INDEX OF LOW PRIORITY SOUNDS
	TAX
	PLA
	CPX I,08
	BCC 25$			;USE LOWER POKEY
	STA X,AUDC1-8
	PLA
	BEQ 48$			;SOMEONE ELSE CHANGES FREQUENCY
	STA X,AUDF1-8
	BNE 48$			;ALWAYS

23$:	CPX I,8
	BCS 49$
	PHA
	TXA			;DOUBLE X
	ASL
	TAX
	LDA I,0
	BEQ 20$			;ALWAYS

25$:	STA X,AUDC0		;SET VOLUME, ETC
	PLA
	BEQ 48$			;SOMEONE ELSE CHANGES FREQUENCY
	STA X,AUDF0		;SET FREQUENCY
48$:	LDX TEMP1		;RESTORE INDEX
49$:	INX
	CPX I,10
	BCC 10$			;NEXT SOUND
	RTS

30$:	LDA X,FREQ
	JMP 15$

40$:	LDA X,CONT
	BNE 20$			;IF VOLUME IS PRESENT CONTINUE
	PLA			;RESTORE STACK
	JMP 48$			;LEAVE CHANNEL ALONE


;	UNDERSTANDING THESE TABLES
;
; MASK:	THIS DETERMINES THE SPEED AND WHEN TO
;	UPDATE THE SOUNDS.  THUS ALL SOUNDS
;	ARE SYNCED TO THE FRAME COUNTER
;
; FREQ:	THIS CONTAINS EITHER THE STARTING ADDRESS OF
;	A TABLE MINUS ONE OR THE CONSTANT FREQUENCY
;	TO BE USED ON THE POKEY.  IF A VALUE OF
;	ZERO IS USED THEN THE SOUND ROUTINE
;	ASSUMES THE PROGRAM IS STUFFING THE
;	VALUES INTO POKEY.  THE TABLE OF FREQUENCIES
;	IS IN THE OPPOSITE ORDER WRITTEN
;	TO THE POKEY.  A TABLE VALUE OF ZERO MEANS
;	TO TURN OFF THE VOLUME.  THIS CAN BE
;	USED FOR A REST OR TO SEPARATE
;	TWO DIFFERENT SOUNDS.  A HIGH PRIORITY SOUND SHOULD
;	HAVE AN EXTRA ENTRY AT THE END
;	OTHERWISE THAT NOTE MAY BE INTERRUPTED
;	BY THE LOW PRIORITY SOUND WHICH HAS
;	A HIGHER UPDATE RATE (I.E. A LOWER "MASK"
;	VALUE).
;
; CONT:	THIS IS SIMILAR IN STRUCTURE TO "FREQ"
;	EXCEPT THIS CONTROLS THE VOLUME AND TYPE
;	OF SOUND.  AN ENTRY OF ZERO MEANS
;	SOMEONE ELSE IS CHANGING THE INPUTS
;	TO POKEY.

MASK:	.BYTE 0,3,1,0		;MASK AGAINST FRAME COUNTER
	.BYTE 3,7,3,7		;THIS IS THE REPEAT COUNT
	.BYTE 3,0,0,0
	.BYTE 1,7,0,3
FREQ:	.WORD FSND0-1		;FREQUENCY TABLE - SHOT SOUND
	.WORD FSND1-1		;BEAM IN SOUND
	.WORD FSND2-1		;PLAYER WAKING
	.WORD FSND3-1		;PICK UP STARS AND SELECT MAZE
	.WORD 80		;RICHOCHET SOUND
	.WORD FSND5-1		;SPECIAL BONUS
	.WORD FSND6-1		;ALIEN SHOT
	.WORD FSND7-1		;TURNSTILE SOUND

	.WORD 10		;TIMER WARNING
	.WORD FSND9-1		;ALIEN EXPLOSION SOUND
	.WORD 0			;PLAYER EXPLOSION AND PLAYER WALKING
	.WORD FSND11-1		;ROCK DISAPPEAR AND SHOT COLLISION (POP) SOUND
	.WORD 0			;BONUS TIMER COUNTDOWN
	.WORD FSND13-1		;BONUS LIFE
	.WORD FSND14-1		;DOOR OPENING SOUND
	.WORD FSND15-1		;PLAYER ENTERED DOOR
CONT:	.WORD 0A8		;AUDIO CONTROL VALUE - SHOT SOUND
	.WORD CSND1-1		;BEAM IN SOUND
	.WORD 0A8		;PLAYER WAKING
	.WORD 0A8		;PICK UP STARS AND SELECT MAZE
	.WORD CSND4-1		;RICHOCHET SOUND
	.WORD 0A8		;SECRET BONUS
	.WORD CSND6-1		;ALIEN SHOT
	.WORD 0A8		;TURNSTILE SOUND

	.WORD CSND8-1		;TIMER WARNING
	.WORD CSND9-1		;ALIEN EXPLOSION
	.WORD 0			;PLAYER EXPLOSION AND PLAYER WALKING
	.WORD 0AF		;ROCK DISAPPEAR (POP) SOUND
	.WORD CSND12-1		;BONUS TIMER COUNTDOWN
	.WORD 0A8		;BONUS LIFE
	.WORD 0A8		;DOOR OPENING SOUND
	.WORD 0A8		;PLAYER ENTERED DOOR
FSND0:	.BYTE 0F0,0E0,0D0,0C0
	.BYTE 0B0,0A0,90,80
	.BYTE 70,60,50,40
CSND1:	.BYTE 8,7,6,6,5,5,4,4
	.BYTE 3,3,2,2,1,1,1
FSND1:	.BYTE 40,3C,38,30,2B,26,20,18
	.BYTE 10,8,6,4,2,1,1
FSND2:	.BYTE 0,5B,5B,5B,5B
	.BYTE 0,48,48
	.BYTE 0,3C,3C,3C,3C
	.BYTE 0,3C,3C
	.BYTE 0,3C,3C,3C,3C
	.BYTE 0,3C,3C
	.BYTE 0,3C,3C,3C,3C
	.BYTE 0,5B,5B
	.BYTE 0,3C,3C,3C,3C
	.BYTE 0,5B,5B,0
FSND3:	.BYTE 80,80		;SELECT SOUND
	.BYTE 80,80,80,80
	.BYTE 80,80		;EAT FRUIT SOUND
	.BYTE 78,70,68,60
	.BYTE 58,50,48,40
	.BYTE 38,30		;EAT A WATERMELON
CSND4:	.BYTE 0A1,0A2,0A4,0A8
FSND5:	.BYTE 0,28,28,30,28,28,30,3C,51
	.BYTE 50,50,60,50,50,60,74,0A2,0
CSND6:	.BYTE 2,4,6,8,0A,8,6,4,2
FSND6:	.BYTE 40,30,20,10,1,1,1,1,1
FSND7:	.BYTE 80,60
CSND8:	.BYTE 0,0A8,0,0A8,0,0A8
	.BYTE 0,0A8,0,0A8,0,0A8
	.BYTE 0,0A8,0,0A8,0,0A8
	.BYTE 0,0A8,0,0A8,0,0A8
FSND9:	.BYTE 0F0,0E0,0D0,0C0,0B0,0A0
	.BYTE 90,80,70,60,50,40,30,20,10
CSND9:	.BYTE 81,82,83,84,85,86,87,88
	.BYTE 89,8A,8B,8C,8D,8E,8F
CSND10:	.BYTE 2C,26,24,22
FSND11:	.BYTE 80,28
CSND12:	.BYTE 0,0A8
FSND13:	.BYTE 0,51,55,48,3C,35,2F,3C
	.BYTE 51,60,79,48,3C,35,2F,3C
	.BYTE 51,60,79,0
FSND14:	.BYTE 90,80,70,64,58,50,48,42
	.BYTE 3C,38,34,30,2E,2C,2A,28
	.BYTE 27,26,25,24,23,22,21,20
FSND15	=FSND14
	.SBTTL	TURNS-CHECK TURNSTILES AND MOVE THEM
;
;ENTRY	(OBST,OBST+1)=BASE ADDRESS OF PLAYFIELD WINDOW (3 BY 3)
;	(TEMP1)=VALID DIRECTIONS
;	(TEMP2)=INDEX FOR PLAYFIELD WINDOW (2 BY 2 WINDOW)
;	(PLAYA)=PLAYERS CURRENT DIRECTION
TURNS:	LDY TEMP2
	LDA PLAYA
	AND I,0F0		;ONLY 16 POSITIONS
	TAX
	LDA TEMP1
	AND I,09
	EOR I,09
	BNE 10$			;WE CAN'T GO LEFT OR DOWN
	JSR TURNS1
	BCC 10$			;NOT A TURNSTILE
	CMP I,0
	BEQ 10$			;IF PLAYER IS MOVING OUT OF TURNSTILE
	CPX I,0C0
	BCC 50$			;IF PLAYER IS IN TURNSTILE
10$:	INY
	LDA TEMP1
	AND I,0A
	EOR I,0A
	BNE 20$			;WE CAN'T GO LEFT OR UP
	JSR TURNS1
	BCC 20$			;NOT A TURNSTILE
	CPX I,80
	BCC 50$			;GOING INTO TURNSTILE
	CPX I,0C1
	BCS 50$			;GOING INTO TURNSTILE
20$:	TYA
	CLC
	ADC I,1F
	TAY
	LDA TEMP1
	AND I,05
	EOR I,05
	BNE 30$			;WE CAN'T GO RIGHT OR DOWN
	JSR TURNS1
	BCC 30$			;NOT A TURNSTILE
	CPX I,41
	BCS 50$			;INTO TURNSTILE
30$:	INY
	LDA TEMP1
	AND I,06
	EOR I,06
	BNE 90$			;WE CAN'T GO RIGHT OR UP
	JSR TURNS1
	BCC 90$			;NO TURNSTILE TODAY
	CPX I,40
	BCC 50$			;INTO TURNSTILE
	CPX I,81
	BCC 90$			;WRONG DIRECTION
50$:	LDX LEVEL
	LDA X,HDTYPE
	AND I,02
	BEQ 52$
	JMP TURNS7		;TURN ALL TURNSTILES

52$:	LDX OBST
	STX TEMP2
	LDX OBST+1
	STX TEMP2+1
	LDA NY,OBST
	CMP I,HTURN
	BEQ 60$			;IF IN HORIZONTAL POSITION
	CPY I,02
	BCS 55$			;IF Y IS LARGE ENOUGH SO DEY DOESN'T WRAP
	INY
	DEC TEMP2
	INY
	DEC TEMP2		;TEMP2 IS ALWAYS GREATER THAN 2
55$:	DEY			;IN VERTICAL POSITION
	JSR TURNS3		;CHECK FOR CENTER OF TURNSTILE
	BEQ 70$			;WE FOUND THE CENTER OF THE TURNSTILE
	DEY
	JSR TURNS3		;CHECK FOR CENTER
	BEQ 70$			;WE FOUND THE CENTER
	INY
	INY
	INY
	JSR TURNS3		;CHECK FOR CENTER
	BEQ 70$			;WE FOUND THE CENTER
	INY			;THE CENTER MUST BE HERE
	BNE 70$			;ALWAYS

90$:	RTS

60$:	JSR TURNS2
	BEQ 70$			;WE FOUND THE CENTER
	JSR TURNS2
	BEQ 70$			;WE FOUND THE CENTER
	LDA TEMP2
	CLC
	ADC I,60
	STA TEMP2		;TRY OTHER DIRECTION
	LDA TEMP2+1
	ADC I,0
	STA TEMP2+1
	JSR TURNS3		;TRY HERE FOR CENTER
	BEQ 70$			;YEP IT WAS HERE
	TYA
	CLC
	ADC I,20
	TAY			;IT MUST BE HERE
70$:	LDA TEMP2		;Y=INDEX FOR CENTER
	SEC
	SBC I,42		;RESET BASE ADDRESS TO LOWER LEFT CORNER
	STA TEMP2
	BCS 75$			;NO UNDERFLOW
	DEC TEMP2+1
75$:	TYA
	CLC
	ADC TEMP2
	STA TEMP2
	BCC TURNS0		;NO OVERFLOW
	INC TEMP2+1
TURNS0	=.
	LDY I,2
	JSR TURNS4		;CHANGE 2 PLAYFIELD STAMPS
	LDY I,62
	JSR TURNS4		;CHANGE 2 PLAYFIELD STAMPS
	LDY I,40
	JSR TURNS5		;CHANGE 2 PLAYFIELD STAMPS
	INY
	JSR TURNS5		;CHANGE 2 PLAYFIELD STAMPS
	LDA I,2
	STA CHAN+7		;TURN ON SOUND
	RTS

;
;ENTRY	(Y)=OFFSET FOR PLAYFIELD WINDOW
;	(OBST,OBST+1)=PLAYFIELD ADDRESS
;EXIT	(CC)=CARRY CLEAR IF PLAYFIELD STAMP IS PART OF A TURNSTILE
TURNS1:	LDA NY,OBST
	CMP I,HTURN
	BEQ 10$
	CMP I,VTURN
	BNE 20$
10$:	SEC			;FLAG TURNSTILE
	RTS

20$:	CLC			;IF NO TURNSTILE
	RTS

TURNS2:	LDA TEMP2		;BACK UP ONE COLUMN TO THE LEFT
	SEC
	SBC I,20
	STA TEMP2
	LDA TEMP2+1
	SBC I,0
	STA TEMP2+1
TURNS3:	LDA NY,TEMP2
	CMP I,9D
	RTS

TURNS4:	JSR 10$
	TYA
	CLC
	ADC I,20
	TAY
10$:	LDA NY,TEMP2
	EOR I,HTURN		;CHANGE TURNSTILE PICTURE
	BEQ 12$			;IF IT IS NOW A TURNSTILE
	LDA I,HTURN		;DO NOT CHANGE NEED TO JUNK.
12$:	STA NY,TEMP2
	RTS

TURNS5:	JSR 10$
10$:	LDA NY,TEMP2
	EOR I,VTURN
	BEQ 12$			;IF IT IS NOW A TURNSTILE
	LDA I,VTURN		;DO NOT CHANGE MUD TO JUNK
12$:	STA NY,TEMP2
	INY
	RTS


;
; THIS ROUTINE TURNS ALL TURNSTILES IN THE MAZE.
;
; USES	A,X,Y,(TEMP2-TEMP2+1)
TURNS6:	LDA FRAME
	AND I,7F
	BNE 50$			;EVERY 2 SECONDS
	LDX LEVEL
	LDA X,HDTYPE
	AND I,04
	BEQ 50$			;NOT AUTO TURNING MAZE
	LDA DOOR
	BMI 50$			;NOT WHEN PLAYER IS IN A DOOR
	LDA PEXPLD
	BNE 50$			;NOT WHEN PLAYER IS DYING
TURNS7	=.
	LDA I,PLYFLD+23&0FF
	STA TEMP2
	LDA I,PLYFLD+23/100
	STA TEMP2+1
10$:	LDY I,42
	LDA NY,TEMP2
	CMP I,CNTR
	BNE 20$			;IF NO TURNSTILE HERE
	JSR TURNS0		;CHANGE TURNSTILE
20$:	LDA TEMP2
	CLC
	ADC I,3
	STA TEMP2
	AND I,1F
	CMP I,1B
	BCC 10$			;WE HAVE NOT REACHED THE TOP YET
	LDA TEMP2
	CLC
	ADC I,48		;MOVE TO NEXT COLUMN
	STA TEMP2
	BCC 25$			;NO OVERFLOW
	INC TEMP2+1
25$:	CMP I,63
	BEQ 50$			;IF ALL DONE
	CMP I,0A3
	BNE 10$			;IF NOT IN THE MIDDLE
	LDY TEMP2+1
	CPY I,PLYFLD+1A3/100
	BNE 10$			;IF NOT THE MIDDLE
	CLC
	ADC I,40
	STA TEMP2		;NO OVERFLOW POSSIBLE
	BNE 10$			;ALWAYS

50$:	RTS


	.SBTTL	UPDATE-UPDATE HIGH SCORE TABLE
UPDATE:	LDA I,-1
	LDX NPLAYR
	STA UPDFLG
	STA UPDFLG+1		;CLEAR FLAGS
	LDA I,0F3		;50 SECONDS AT 60HZ
	STA FRAME+1		;PREPARE TO TIMEOUT GETTING INITIALS AND CONTINUATION GAME
	LDA $CMODE
	AND I,0C3
	CMP I,0C0
	BEQ 29$			;IF IN DEMO MODE
	SED
	LDA GTIME		;ACCUMULATE GAME TIME
	CLC
	ADC EATIME
	STA EATIME
	LDA GTIME+1
	ADC EATIME+1
	STA EATIME+1
	LDA EATIME+2
	ADC I,0
	STA EATIME+2
	LDA EATIME+3
	ADC I,0
	BCS 5$			;DO NOT OVERFOW COUNTER
	STA EATIME+3
5$:	LDA EAGAMS		;UPDATE NUMBER OF PLAYS
	SEC
	ADC NPLAYR
	STA EAGAMS
	LDA EAGAMS+1
	ADC I,0
	STA EAGAMS+1
	LDA EAGAMS+2
	ADC I,0
	BCS 10$			;DO NOT OVERFLOW COUNTER
	STA EAGAMS+2		;IF THIS OVERFLOWS EA ROM IS DEAD
10$:	CLD
18$:	LDY I,0			;INDEX INTO HIGH SCORE TABLE
20$:	LDA Y,HSCORE
	CMP X,SCORE0		;SETS CARRY
	LDA Y,HSCORE+1
	SBC X,SCORE1
	LDA Y,HSCORE+2
	SBC X,SCORE2
	BCC 30$			;NEW HIGH SCORE
25$:	INY
	INY
	INY
	CPY I,3*NSCORE
	BCC 20$			;LOOP FOR ALL EXTRIES
28$:	DEX
	BPL 18$			;NEXT PLAYER
	LDA UPDFLG+1
	BMI 29$			;NO PLAYER 2 HIGH SCORE
	CMP UPDFLG
	BCC 29$			;IF PLAYER 2 SCORE IS BETTER THAN PLAYER 1
	ADC I,02		;ADD 3
	CMP I,3*NSCORE
	BCC 27$			;IF NOT OUT OF TABLE NOW
	LDA I,-1
27$:	STA UPDFLG+1		;NEW INDEX
29$:	LDA I,0
	STA UPDINT		;STARTING WITH FIRST INITIAL
	LDA UPDFLG+1
	AND UPDFLG
	BPL 90$			;IF ONE PLAYER MUST ENTER INITIALS TABLE
	JSR CKSUM		;SET CHECKSUM FOR EAROM WRITES
90$:	RTS

30$:	STX TEMP2		;SAVE INDEX
	STY TEMP2+1
	STY X,UPDFLG		;FLAG TO GET PLAYERS INITIALS
	LDX I,3*NSCORE-1
40$:	LDA X,INITL-3		;COPY INITIALS DOWN
	STA X,INITL
	LDA X,HSCORE-3
	STA X,HSCORE		;COPY HIGH SCORE
	DEX
	CPX TEMP2+1
	BNE 40$			;LOOP UNTIL ENTRIES MOVED UP
	LDA I,1
	STA X,INITL		;START LETTERS AT A
	LDA I,0
	STA X,INITL+1		;CLEAR SECOND AND THIRD INITIAL
	STA X,INITL+2
	LDX TEMP2		;LOOP FOR NEXT PLAYER
	LDA X,SCORE2		;MOVE HIGH SCORES IN
	STA Y,HSCORE+2
	LDA X,SCORE1
	STA Y,HSCORE+1
	LDA X,SCORE0
	STA Y,HSCORE
	JMP 28$			;ALWAYS


	.SBTTL	UPSCRE-UPDATE SCORES ON SCREEN
UPSCRE:	LDA I,PLYFLD+3E&0FF
	LDY I,PLYFLD+3E/100
	BIT CKIND
	BPL 2$			;IF NOT COCKTAIL
	LDA I,PLYFLD+381&0FF
	LDY I,PLYFLD+381/100
2$:	STA TEMP4
	STY TEMP4+1
	LDA SCORE2
	SEC			;ZERO SUPPRESSION
	JSR DIGIT2
	LDA SCORE1
	JSR DIGIT2		;2 MORE DIGITS
	LDA SCORE0
	CLC			;NO ZERO SUPPRESSION
	JSR DIGIT2		;UPDATE PLAYER ONE'S SCORE
	LDY NPLAYR
	BEQ 10$			;IF NOT 1 PLAYER
	LDY I,PLYFLD+2BE/100
	LDA I,PLYFLD+2BE&0FF
	BIT CKIND
	BPL 5$			;IF NOT COCKTAIL
	LDY I,PLYFLD+101/100
	LDA I,PLYFLD+101&0FF
5$:	STY TEMP4+1		;PLAYFIELD ADDRESS
	STA TEMP4
	LDA SCORE2+1
	SEC
	JSR DIGIT2
	LDA SCORE1+1
	JSR DIGIT2		;2 MORE DIGITS
	LDA SCORE0+1
	CLC
	JSR DIGIT2		;UPDATE PLAYER TWO'S SCORE
10$:	LDA I,PLYFLD+17F&0FF
	LDY I,PLYFLD+17F/100
	BIT CKIND
	BPL 15$			;IF NOT COCKTAIL
	LDY I,PLYFLD+240/100
	LDA I,PLYFLD+240&0FF
15$:	STA TEMP4
	STY TEMP4+1
	LDA HSCORE+2
	SEC
	JSR DIGIT2		;DISPLAY 2 DIGITS OF HIGH SCORE
	LDA HSCORE+1
	JSR DIGIT2		;2 MORE DIGITS
	LDA HSCORE
	CLC
	JSR DIGIT2		;DISPLAY 2 DIGITS OF HIGH SCORE
	LDA I,PLYFLD+1BE&0FF
	LDY I,PLYFLD+1BE/100
	BIT CKIND
	BPL 20$			;IF NOT UPSIDE DOWN
	LDY I,PLYFLD+201/100
	LDA I,PLYFLD+201&0FF
20$:	STA TEMP4
	STY TEMP4+1
	LDY I,0
	JSR INITAL		;DISPLAY INITIALS OF HIGH SCORE
	LDY I,1
	JSR INITAL
	LDY I,2
	JMP INITAL


	.REPT 8-<.-MVSUB>&07	;ALLIGN ON 8 BYTE BOUNDARY
	.BYTE 0
	.ENDR
	.INCLUD MVCPY		;COPYRIGHT PROTECTION
	.INCLUD MVCPY		;ALLOW ROOM FOR FUTURE MODIFICATIONS
	.INCLUD MVCPY

CKSUM3:	.BYTE 0E2		;CHECKSUM FOR FORTH 4K BLOCK

	.NLIST MC
	.REPT 2E		;FILL REST OF PROGRAM SPACE
	.BYTE 0FF
	.ENDR

	.END
                                                                                             